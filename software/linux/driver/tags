!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADAPTER_H	xxgbeth0/xgadapter.h	66;"	d
ADAPTER_H	xxgbeth1/xgadapter.h	66;"	d
ALIGNMENT_RECV	xxgbeth0/xgadapter.c	256;"	d	file:
ALIGNMENT_RECV	xxgbeth1/xgadapter.c	256;"	d	file:
AXI_MIG_RST_SHIFT	include/xdma_user.h	257;"	d
Acks	xdma/xdma_base.c	/^u32 Acks(u32 dirqval)$/;"	f
AllCnt	xdma/xdma_bdring.h	/^		u32 AllCnt;             \/**< Total Number of BDs for channel *\/$/;"	m	struct:__anon27
AllCnt	xdma/xdma_bdring.h	/^		u32 AllCnt;             \/**< Total Number of BDs for channel *\/$/;"	m	struct:__anon28
AllocNum	xrawdata0/sguser.c	/^  int AllocNum;$/;"	m	struct:__anon22	file:
AllocNum	xrawdata1/sguser.c	/^  int AllocNum;$/;"	m	struct:__anon23	file:
AllocPtr	xrawdata0/sguser.c	/^  int AllocPtr;$/;"	m	struct:__anon22	file:
AllocPtr	xrawdata1/sguser.c	/^  int AllocPtr;$/;"	m	struct:__anon23	file:
BDSerrs	include/xpmon_be.h	/^    int BDSerrs;                \/**< Total BD short errors - only TX BDs *\/$/;"	m	struct:__anon7
BDSerrs	xdma/xdma_bdring.h	/^		u32 BDSerrs;            \/**< Total TX BD short errors reported by DMA *\/$/;"	m	struct:__anon27
BDSerrs	xdma/xdma_bdring.h	/^		u32 BDSerrs;            \/**< Total TX BD short errors reported by DMA *\/$/;"	m	struct:__anon28
BDerrs	include/xpmon_be.h	/^    int BDerrs;                 \/**< Total BD errors *\/$/;"	m	struct:__anon7
BDerrs	xdma/xdma_bdring.h	/^		u32 BDerrs;             \/**< Total BD errors reported by DMA *\/$/;"	m	struct:__anon27
BDerrs	xdma/xdma_bdring.h	/^		u32 BDerrs;             \/**< Total BD errors reported by DMA *\/$/;"	m	struct:__anon28
BDs	include/xpmon_be.h	/^    int BDs;                    \/**< Total Number of BDs *\/$/;"	m	struct:__anon7
BUFALIGN	xrawdata0/sguser.c	212;"	d	file:
BUFALIGN	xrawdata1/sguser.c	212;"	d	file:
BUFFER_ALIGNRECV	xxgbeth0/xgadapter.c	257;"	d	file:
BUFFER_ALIGNRECV	xxgbeth1/xgadapter.c	257;"	d	file:
BUFSIZE	xrawdata0/sguser.c	201;"	d	file:
BUFSIZE	xrawdata1/sguser.c	201;"	d	file:
BURST_SIZE	xrawdata0/sguser.c	136;"	d	file:
BURST_SIZE	xrawdata1/sguser.c	136;"	d	file:
BYTEMULTIPLE	xrawdata0/sguser.c	213;"	d	file:
BYTEMULTIPLE	xrawdata1/sguser.c	213;"	d	file:
BaseAddress	xxgbeth0/xxgethernet.h	/^	u32 BaseAddress;\/**< BaseAddress is the physical base address of the$/;"	m	struct:XXgEthernet_Config
BaseAddress	xxgbeth0/xxgethernet.h	/^	u64 BaseAddress;\/**< BaseAddress is the physical base address of the$/;"	m	struct:XXgEthernet_Config
BaseAddress	xxgbeth1/xxgethernet.h	/^	u32 BaseAddress;\/**< BaseAddress is the physical base address of the$/;"	m	struct:XXgEthernet_Config
BaseAddress	xxgbeth1/xxgethernet.h	/^	u64 BaseAddress;\/**< BaseAddress is the physical base address of the$/;"	m	struct:XXgEthernet_Config
BdRing	xdma/xdma.h	/^			Dma_BdRing BdRing;      \/**< BD container for DMA engine *\/$/;"	m	struct:__anon24
BdRing	xdma/xdma.h	/^  Dma_BdRing BdRing;      \/**< BD container for DMA engine *\/$/;"	m	struct:__anon25
BdaRestart	xdma/xdma_bdring.h	/^		Dma_Bd *BdaRestart;     \/**< BD to load when channel is started *\/$/;"	m	struct:__anon27
BdaRestart	xdma/xdma_bdring.h	/^		Dma_Bd *BdaRestart;     \/**< BD to load when channel is started *\/$/;"	m	struct:__anon28
Buffer	xrawdata0/sguser.c	/^} Buffer;$/;"	t	typeref:struct:__anon22	file:
Buffer	xrawdata1/sguser.c	/^} Buffer;$/;"	t	typeref:struct:__anon23	file:
BufferInfo	include/xpmon_be.h	/^}BufferInfo;$/;"	t	typeref:struct:__anon18
BufferInfoQ	xrawdata0/sguser.c	/^typedef struct BufferInfoQ$/;"	s	file:
BufferInfoQ	xrawdata1/sguser.c	/^typedef struct BufferInfoQ$/;"	s	file:
BufferInfoQue	xrawdata0/sguser.c	/^} BufferInfoQue;$/;"	t	typeref:struct:BufferInfoQ	file:
BufferInfoQue	xrawdata1/sguser.c	/^} BufferInfoQue;$/;"	t	typeref:struct:BufferInfoQ	file:
Buffers	include/xdma_user.h	/^    int Buffers;                \/**< Count of buffers *\/$/;"	m	struct:__anon2
Buffers	include/xpmon_be.h	/^    int Buffers;                \/**< Total Number of buffers *\/$/;"	m	struct:__anon7
CHKR_MISMATCH	xrawdata0/sguser.c	182;"	d	file:
CHKR_MISMATCH	xrawdata1/sguser.c	182;"	d	file:
CLOSED	xrawdata0/sguser.c	99;"	d	file:
CLOSED	xrawdata1/sguser.c	99;"	d	file:
CPU_LOADED	xrawdata0/sguser.c	/^static int CPU_LOADED[16] =$/;"	v	file:
CPU_LOADED	xrawdata1/sguser.c	/^static int CPU_LOADED[16] =$/;"	v	file:
ChanBase	xdma/xdma_bdring.h	/^		u32 ChanBase;$/;"	m	struct:__anon28
ChanBase	xdma/xdma_bdring.h	/^		u64 ChanBase;$/;"	m	struct:__anon27
Config	xxgbeth0/xxgethernet.h	/^	XXgEthernet_Config Config; \/**< Hardware configuration *\/$/;"	m	struct:XXgEthernet
Config	xxgbeth1/xxgethernet.h	/^	XXgEthernet_Config Config; \/**< Hardware configuration *\/$/;"	m	struct:XXgEthernet
Count	include/xpmon_be.h	/^    int Count;                  \/**< Number of statistics captures *\/$/;"	m	struct:__anon11
Count	include/xpmon_be.h	/^    int Count;                  \/**< Number of statistics captures *\/$/;"	m	struct:__anon13
Count	include/xpmon_be.h	/^    int Count;                  \/**< Number of statistics captures *\/$/;"	m	struct:__anon9
DESIGN_MODE_ADDRESS	xrawdata0/sguser.c	118;"	d	file:
DESIGN_MODE_ADDRESS	xrawdata1/sguser.c	118;"	d	file:
DESIGN_MODE_ADDRESS	xxgbeth0/xgadapter.c	215;"	d	file:
DESIGN_MODE_ADDRESS	xxgbeth1/xgadapter.c	215;"	d	file:
DEV_NAME	xrawdata0/sguser.c	112;"	d	file:
DEV_NAME	xrawdata0/sguser.c	115;"	d	file:
DEV_NAME	xrawdata1/sguser.c	112;"	d	file:
DEV_NAME	xrawdata1/sguser.c	115;"	d	file:
DIE_TEMP	xdma/xdma_base.c	188;"	d	file:
DIR_TYPE_C2S	include/xdma_user.h	254;"	d
DIR_TYPE_S2C	include/xdma_user.h	253;"	d
DMAStatistics	include/xpmon_be.h	/^} DMAStatistics;$/;"	t	typeref:struct:__anon8
DMA_ALL_BDS	xdma/xdma.h	433;"	d
DMA_BDRING_H	xdma/xdma_bdring.h	71;"	d
DMA_BD_BUFAH_OFFSET	xdma/xdma_bd.h	133;"	d
DMA_BD_BUFAL_OFFSET	xdma/xdma_bd.h	132;"	d
DMA_BD_BUFL_CTRL_OFFSET	xdma/xdma_bd.h	131;"	d
DMA_BD_BUFL_MASK	xdma/xdma_bd.h	151;"	d
DMA_BD_BUFL_STATUS_OFFSET	xdma/xdma_bd.h	127;"	d
DMA_BD_CARDA_OFFSET	xdma/xdma_bd.h	130;"	d
DMA_BD_CNT	xdma/xdma_base.c	155;"	d	file:
DMA_BD_COMP_MASK	xdma/xdma_bd.h	166;"	d
DMA_BD_CTRL_MASK	xdma/xdma_bd.h	153;"	d
DMA_BD_EOP_MASK	xdma/xdma_bd.h	161;"	d
DMA_BD_ERROR_MASK	xdma/xdma_bd.h	162;"	d
DMA_BD_HW_NUM_WORDS	xdma/xdma_bd.h	117;"	d
DMA_BD_INT_COMP_MASK	xdma/xdma_bd.h	157;"	d
DMA_BD_INT_ERROR_MASK	xdma/xdma_bd.h	156;"	d
DMA_BD_MINIMUM_ALIGNMENT	xdma/xdma_bd.h	111;"	d
DMA_BD_NDESC_OFFSET	xdma/xdma_bd.h	134;"	d
DMA_BD_PAGEADDR	xdma/xdma_bd.h	147;"	d
DMA_BD_PAGEADDRH_OFFSET	xdma/xdma_bd.h	145;"	d
DMA_BD_PAGEADDRL_OFFSET	xdma/xdma_bd.h	144;"	d
DMA_BD_SHORT_MASK	xdma/xdma_bd.h	165;"	d
DMA_BD_SOP_MASK	xdma/xdma_bd.h	160;"	d
DMA_BD_STATUS_MASK	xdma/xdma_bd.h	152;"	d
DMA_BD_SW_NUM_WORDS	xdma/xdma_bd.h	116;"	d
DMA_BD_USER_HIGH_ZERO_MASK	xdma/xdma_bd.h	163;"	d
DMA_BD_USER_LOW_ZERO_MASK	xdma/xdma_bd.h	164;"	d
DMA_BD_USRH_OFFSET	xdma/xdma_bd.h	129;"	d
DMA_BD_USRL_OFFSET	xdma/xdma_bd.h	128;"	d
DMA_BD_VBUFAH_OFFSET	xdma/xdma_bd.h	142;"	d
DMA_BD_VBUFAL_OFFSET	xdma/xdma_bd.h	141;"	d
DMA_C2S_ENG_INT_VAL	xdma/xdma_hw.h	129;"	d
DMA_DRIVER_NAME	include.mk	/^export DMA_DRIVER_NAME=xdma_k7.ko$/;"	m
DMA_ENGINE_PER_SIZE	xdma/xdma_base.c	145;"	d	file:
DMA_ENG_ALLINT_MASK	xdma/xdma_hw.h	184;"	d
DMA_ENG_BD_MAX_BC	xdma/xdma_hw.h	143;"	d
DMA_ENG_BD_MAX_BC_SHIFT	xdma/xdma_hw.h	147;"	d
DMA_ENG_BLOCK	xdma/xdma_hw.h	140;"	d
DMA_ENG_C2S	xdma/xdma_hw.h	137;"	d
DMA_ENG_DIRECTION_MASK	xdma/xdma_hw.h	136;"	d
DMA_ENG_DISABLE	xdma/xdma_hw.h	174;"	d
DMA_ENG_ENABLE	xdma/xdma_hw.h	173;"	d
DMA_ENG_ENABLE_MASK	xdma/xdma_hw.h	172;"	d
DMA_ENG_IDLE	xdma/xdma_hw.h	177;"	d
DMA_ENG_INT_ABORTERR	xdma/xdma_hw.h	166;"	d
DMA_ENG_INT_ABORTERR_ACK	xdma/xdma_hw.h	167;"	d
DMA_ENG_INT_ACK	xdma/xdma_hw.h	159;"	d
DMA_ENG_INT_ACTIVE_MASK	xdma/xdma_hw.h	158;"	d
DMA_ENG_INT_ALERR	xdma/xdma_hw.h	162;"	d
DMA_ENG_INT_ALERR_ACK	xdma/xdma_hw.h	163;"	d
DMA_ENG_INT_BDCOMP	xdma/xdma_hw.h	160;"	d
DMA_ENG_INT_BDCOMP_ACK	xdma/xdma_hw.h	161;"	d
DMA_ENG_INT_CHAINEND	xdma/xdma_hw.h	168;"	d
DMA_ENG_INT_CHAINEND_ACK	xdma/xdma_hw.h	169;"	d
DMA_ENG_INT_DISABLE	xdma/xdma_hw.h	157;"	d
DMA_ENG_INT_ENABLE	xdma/xdma_hw.h	156;"	d
DMA_ENG_INT_FETERR	xdma/xdma_hw.h	164;"	d
DMA_ENG_INT_FETERR_ACK	xdma/xdma_hw.h	165;"	d
DMA_ENG_NUMBER	xdma/xdma_hw.h	142;"	d
DMA_ENG_NUMBER_SHIFT	xdma/xdma_hw.h	146;"	d
DMA_ENG_PACKET	xdma/xdma_hw.h	141;"	d
DMA_ENG_PRESENT_MASK	xdma/xdma_hw.h	135;"	d
DMA_ENG_RESET	xdma/xdma_hw.h	182;"	d
DMA_ENG_RUNNING	xdma/xdma_hw.h	176;"	d
DMA_ENG_S2C	xdma/xdma_hw.h	138;"	d
DMA_ENG_STATE_MASK	xdma/xdma_hw.h	175;"	d
DMA_ENG_STATE_WAITED	xdma/xdma_hw.h	179;"	d
DMA_ENG_TYPE_MASK	xdma/xdma_hw.h	139;"	d
DMA_ENG_USER_RESET	xdma/xdma_hw.h	181;"	d
DMA_ENG_WAITED_ACK	xdma/xdma_hw.h	180;"	d
DMA_ENG_WAITING	xdma/xdma_hw.h	178;"	d
DMA_INT_ACTIVE_MASK	xdma/xdma_hw.h	120;"	d
DMA_INT_DISABLE	xdma/xdma_hw.h	119;"	d
DMA_INT_ENABLE	xdma/xdma_hw.h	118;"	d
DMA_INT_MSI_MODE	xdma/xdma_hw.h	122;"	d
DMA_INT_PENDING_MASK	xdma/xdma_hw.h	121;"	d
DMA_MPS_USED	xdma/xdma_hw.h	126;"	d
DMA_MRRS_USED	xdma/xdma_hw.h	127;"	d
DMA_OFFSET	xdma/xdma_base.c	146;"	d	file:
DMA_S2C_ENG_INT_VAL	xdma/xdma_hw.h	128;"	d
DMA_SIZE	xdma/xdma_base.c	148;"	d	file:
DMA_STATS_FILE	include.mk	/^export DMA_STATS_FILE=xdma_stat$/;"	m
DMA_USER_INT_ACK	xdma/xdma_hw.h	125;"	d
DMA_USER_INT_ACTIVE_MASK	xdma/xdma_hw.h	124;"	d
DMA_USER_INT_ENABLE	xdma/xdma_hw.h	123;"	d
DOWNSTR_COMPBYTE_COUNTR	xdma/xdma_base.c	166;"	d	file:
DQPool	xdma/xdma_base.c	/^struct PktPool * DQPool(void)$/;"	f
DRIVER_DESCRIPTION	xdma/xdma_base.c	/^MODULE_DESCRIPTION(DRIVER_DESCRIPTION);$/;"	v
DRIVER_DESCRIPTION	xdma/xdma_base.c	119;"	d	file:
DRIVER_DESCRIPTION	xrawdata0/sguser.c	/^MODULE_DESCRIPTION (DRIVER_DESCRIPTION);$/;"	v
DRIVER_DESCRIPTION	xrawdata0/sguser.c	256;"	d	file:
DRIVER_DESCRIPTION	xrawdata0/sguser.c	259;"	d	file:
DRIVER_DESCRIPTION	xrawdata1/sguser.c	/^MODULE_DESCRIPTION (DRIVER_DESCRIPTION);$/;"	v
DRIVER_DESCRIPTION	xrawdata1/sguser.c	256;"	d	file:
DRIVER_DESCRIPTION	xrawdata1/sguser.c	259;"	d	file:
DRIVER_DESCRIPTION	xxgbeth0/xgadapter.c	/^MODULE_DESCRIPTION(DRIVER_DESCRIPTION);$/;"	v
DRIVER_DESCRIPTION	xxgbeth0/xgadapter.c	247;"	d	file:
DRIVER_DESCRIPTION	xxgbeth1/xgadapter.c	/^MODULE_DESCRIPTION(DRIVER_DESCRIPTION);$/;"	v
DRIVER_DESCRIPTION	xxgbeth1/xgadapter.c	247;"	d	file:
DRIVER_MODE	include.mk	/^export DRIVER_MODE=PERFORMANCE$/;"	m
DRIVER_NAME	xdma/xdma_base.c	118;"	d	file:
DRIVER_NAME	xrawdata0/sguser.c	255;"	d	file:
DRIVER_NAME	xrawdata0/sguser.c	258;"	d	file:
DRIVER_NAME	xrawdata1/sguser.c	255;"	d	file:
DRIVER_NAME	xrawdata1/sguser.c	258;"	d	file:
DRIVER_NAME	xxgbeth0/xgadapter.c	246;"	d	file:
DRIVER_NAME	xxgbeth1/xgadapter.c	246;"	d	file:
DRIVER_VERSION	xdma/xdma_base.c	/^MODULE_VERSION(DRIVER_VERSION);$/;"	v
DRIVER_VERSION	xdma/xdma_base.c	120;"	d	file:
DRIVER_VERSION	xxgbeth0/xgadapter.c	/^MODULE_VERSION(DRIVER_VERSION);$/;"	v
DRIVER_VERSION	xxgbeth0/xgadapter.c	248;"	d	file:
DRIVER_VERSION	xxgbeth1/xgadapter.c	/^MODULE_VERSION(DRIVER_VERSION);$/;"	v
DRIVER_VERSION	xxgbeth1/xgadapter.c	248;"	d	file:
DStats	xdma/xdma_base.c	/^DMAStatistics DStats[MAX_DMA_ENGINES][MAX_STATS];$/;"	v
DUPLEX	xxgbeth0/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	g	file:
DUPLEX	xxgbeth0/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	t	typeref:enum:DUPLEX	file:
DUPLEX	xxgbeth1/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	g	file:
DUPLEX	xxgbeth1/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	t	typeref:enum:DUPLEX	file:
DataMismatch	include/xdma_user.h	/^    int DataMismatch;           \/**< Data Mismatch ocurrence error *\/$/;"	m	struct:__anon2
DataMismatch	include/xpmon_be.h	/^	int DataMismatch;           \/**<  Data Mismatch error *\/$/;"	m	struct:__anon7
DdrCalib	include/xpmon_be.h	/^	int DdrCalib;				\/**< DDR3 calibration statistics *\/$/;"	m	struct:__anon17
DeviceId	include/xpmon_be.h	/^    unsigned int DeviceId;      \/**< Device ID *\/$/;"	m	struct:__anon6
DeviceId	xxgbeth0/xxgethernet.h	/^	u16 DeviceId;	\/**< DeviceId is the unique ID  of the device *\/$/;"	m	struct:XXgEthernet_Config
DeviceId	xxgbeth1/xxgethernet.h	/^	u16 DeviceId;	\/**< DeviceId is the unique ID  of the device *\/$/;"	m	struct:XXgEthernet_Config
DirectLinkChg	include/xpmon_be.h	/^} DirectLinkChg;$/;"	t	typeref:struct:__anon14
Dma	xdma/xdma.h	/^  Dma_Engine Dma[MAX_DMA_ENGINES];\/**< Per-engine information *\/$/;"	m	struct:privData
DmaBaseAddress	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaBaseAddress);$/;"	v
DmaBaseAddress	xdma/xdma_user.c	/^void * DmaBaseAddress(int bar)$/;"	f
DmaFifoEmptyWait	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaFifoEmptyWait);$/;"	v
DmaFifoEmptyWait	xdma/xdma_user.c	/^void DmaFifoEmptyWait(int handleId, u32 type)$/;"	f
DmaInterrupt	xdma/xdma_base.c	/^static irqreturn_t DmaInterrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
DmaLock	xdma/xdma_base.c	/^DEFINE_SPINLOCK(DmaLock);$/;"	v
DmaMac_ReadReg	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaMac_ReadReg);$/;"	v
DmaMac_ReadReg	xdma/xdma_user.c	/^int DmaMac_ReadReg(int offset)$/;"	f
DmaMac_WriteReg	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaMac_WriteReg);$/;"	v
DmaMac_WriteReg	xdma/xdma_user.c	/^int DmaMac_WriteReg(int offset, int data)$/;"	f
DmaRegister	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaRegister);$/;"	v
DmaRegister	xdma/xdma_user.c	/^void * DmaRegister(int engine, int bar, UserPtrs * uptr, int pktsize)$/;"	f
DmaSendPages	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaSendPages);$/;"	v
DmaSendPages	xdma/xdma_user.c	/^int DmaSendPages(void * handle, PktBuf ** pkts, int numpkts)$/;"	f
DmaSendPages_Tx	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaSendPages_Tx);$/;"	v
DmaSendPages_Tx	xdma/xdma_user.c	/^int DmaSendPages_Tx(void * handle, PktBuf ** pkts, int numpkts)$/;"	f
DmaSendPkt	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaSendPkt);$/;"	v
DmaSendPkt	xdma/xdma_user.c	/^int DmaSendPkt(void * handle, PktBuf * pkts, int numpkts)$/;"	f
DmaSetupReceive	xrawdata0/sguser.c	/^static int DmaSetupReceive(void * hndl, int num ,const char __user * buffer, size_t length)   $/;"	f	file:
DmaSetupReceive	xrawdata1/sguser.c	/^static int DmaSetupReceive(void * hndl, int num ,const char __user * buffer, size_t length)   $/;"	f	file:
DmaSetupRecvBuffers	xdma/xdma_base.c	/^static void DmaSetupRecvBuffers(struct pci_dev *pdev, Dma_Engine * eptr)$/;"	f	file:
DmaSetupTransmit	xrawdata0/sguser.c	/^static int DmaSetupTransmit(void * hndl, int num ,const char __user * buffer, size_t length)   $/;"	f	file:
DmaSetupTransmit	xrawdata1/sguser.c	/^static int DmaSetupTransmit(void * hndl, int num ,const char __user * buffer, size_t length)   $/;"	f	file:
DmaUnregister	xdma/xdma_base.c	/^EXPORT_SYMBOL(DmaUnregister);$/;"	v
DmaUnregister	xdma/xdma_user.c	/^int DmaUnregister(void * handle)$/;"	f
Dma_Bd	xdma/xdma_bd.h	/^typedef u32 Dma_Bd[DMA_BD_SW_NUM_WORDS];$/;"	t
Dma_BdRing	xdma/xdma_bdring.h	/^	} Dma_BdRing;$/;"	t	typeref:struct:__anon27
Dma_BdRing	xdma/xdma_bdring.h	/^	} Dma_BdRing;$/;"	t	typeref:struct:__anon28
Dma_BdRingAlign	xdma/xdma_bdring.c	/^u32 Dma_BdRingAlign(u32 AllocPtr, u32 Size, u32 Align, u32 * Delta)$/;"	f
Dma_BdRingAlloc	xdma/xdma_bdring.c	/^int Dma_BdRingAlloc(Dma_BdRing * RingPtr, unsigned NumBd, Dma_Bd ** BdSetPtr)$/;"	f
Dma_BdRingCheck	xdma/xdma_bdring.c	/^int Dma_BdRingCheck(Dma_BdRing * RingPtr)$/;"	f
Dma_BdRingCreate	xdma/xdma_bdring.c	/^int Dma_BdRingCreate(Dma_BdRing * RingPtr, u64 PhysAddr, u64 VirtAddr, u32 Alignment, unsigned BdCount)$/;"	f
Dma_BdRingForceFromHw	xdma/xdma_bdring.c	/^unsigned Dma_BdRingForceFromHw(Dma_BdRing * RingPtr, unsigned BdLimit,$/;"	f
Dma_BdRingFree	xdma/xdma_bdring.c	/^int Dma_BdRingFree(Dma_BdRing * RingPtr, unsigned NumBd, Dma_Bd * BdSetPtr)$/;"	f
Dma_BdRingFromHw	xdma/xdma_bdring.c	/^unsigned Dma_BdRingFromHw(Dma_BdRing * RingPtr, unsigned BdLimit,$/;"	f
Dma_BdRingStart	xdma/xdma_bdring.c	/^int Dma_BdRingStart(Dma_BdRing * RingPtr)$/;"	f
Dma_BdRingToHw	xdma/xdma_bdring.c	/^int Dma_BdRingToHw(Dma_BdRing * RingPtr, unsigned NumBd, Dma_Bd * BdSetPtr)$/;"	f
Dma_BdRingUnAlloc	xdma/xdma_bdring.c	/^int Dma_BdRingUnAlloc(Dma_BdRing * RingPtr, unsigned NumBd, Dma_Bd * BdSetPtr)$/;"	f
Dma_Engine	xdma/xdma.h	/^		} Dma_Engine;$/;"	t	typeref:struct:__anon24
Dma_Engine	xdma/xdma.h	/^} Dma_Engine;$/;"	t	typeref:struct:__anon25
Dma_Initialize	xdma/xdma.c	/^void Dma_Initialize(Dma_Engine * InstancePtr, u64 BaseAddress, u32 Type)$/;"	f
Dma_Reset	xdma/xdma.c	/^void Dma_Reset(Dma_Engine * InstancePtr)$/;"	f
Dma_get_ringparam	xdma/xdma_base.c	/^EXPORT_SYMBOL(Dma_get_ringparam);$/;"	v
Dma_get_ringparam	xdma/xdma_user.c	/^void Dma_get_ringparam(void *handle, struct ethtool_ringparam *ering)$/;"	f
Dma_mBdClear	xdma/xdma_bd.h	241;"	d
Dma_mBdGetBufAddr	xdma/xdma_bd.h	/^	static inline u64 Dma_mBdGetBufAddr(Dma_Bd * BdPtr)$/;"	f
Dma_mBdGetBufAddr	xdma/xdma_bd.h	553;"	d
Dma_mBdGetCtrl	xdma/xdma_bd.h	277;"	d
Dma_mBdGetCtrlLength	xdma/xdma_bd.h	396;"	d
Dma_mBdGetId	xdma/xdma_bd.h	/^	static inline u64 Dma_mBdGetId(Dma_Bd * BdPtr)$/;"	f
Dma_mBdGetId	xdma/xdma_bd.h	489;"	d
Dma_mBdGetPageAddr	xdma/xdma_bd.h	/^	static inline u64 Dma_mBdGetPageAddr(Dma_Bd * BdPtr)$/;"	f
Dma_mBdGetPageAddr	xdma/xdma_bd.h	494;"	d
Dma_mBdGetStatLength	xdma/xdma_bd.h	375;"	d
Dma_mBdGetStatus	xdma/xdma_bd.h	313;"	d
Dma_mBdGetUserData	xdma/xdma_bd.h	/^static inline unsigned long long Dma_mBdGetUserData(Dma_Bd * BdPtr)$/;"	f
Dma_mBdRead	xdma/xdma_bd.h	197;"	d
Dma_mBdRead	xdma/xdma_bd.h	200;"	d
Dma_mBdRingBusy	xdma/xdma_hw.h	385;"	d
Dma_mBdRingGetCnt	xdma/xdma_bdring.h	177;"	d
Dma_mBdRingGetFreeCnt	xdma/xdma_bdring.h	194;"	d
Dma_mBdRingNext	xdma/xdma_bdring.h	240;"	d
Dma_mBdRingNext	xdma/xdma_bdring.h	245;"	d
Dma_mBdRingPrev	xdma/xdma_bdring.h	266;"	d
Dma_mBdRingPrev	xdma/xdma_bdring.h	272;"	d
Dma_mBdRingSnapShotCurrBd	xdma/xdma_bdring.h	218;"	d
Dma_mBdSetBufAddr	xdma/xdma_bd.h	513;"	d
Dma_mBdSetBufAddr	xdma/xdma_bd.h	522;"	d
Dma_mBdSetCtrl	xdma/xdma_bd.h	258;"	d
Dma_mBdSetCtrlLength	xdma/xdma_bd.h	340;"	d
Dma_mBdSetId	xdma/xdma_bd.h	416;"	d
Dma_mBdSetId	xdma/xdma_bd.h	443;"	d
Dma_mBdSetId_NULL	xdma/xdma_bd.h	425;"	d
Dma_mBdSetPageAddr	xdma/xdma_bd.h	432;"	d
Dma_mBdSetPageAddr	xdma/xdma_bd.h	448;"	d
Dma_mBdSetStatLength	xdma/xdma_bd.h	347;"	d
Dma_mBdSetStatus	xdma/xdma_bd.h	294;"	d
Dma_mBdSetUserData	xdma/xdma_bd.h	570;"	d
Dma_mBdWrite	xdma/xdma_bd.h	221;"	d
Dma_mBdWrite	xdma/xdma_bd.h	224;"	d
Dma_mEnable	xdma/xdma_hw.h	364;"	d
Dma_mEngIntAck	xdma/xdma_hw.h	450;"	d
Dma_mEngIntDisable	xdma/xdma_hw.h	426;"	d
Dma_mEngIntEnable	xdma/xdma_hw.h	401;"	d
Dma_mGetCrSr	xdma/xdma_hw.h	331;"	d
Dma_mGetRing	xdma/xdma_bdring.h	160;"	d
Dma_mIn32	xdma/xdma_hw.h	211;"	d
Dma_mIntAck	xdma/xdma_hw.h	309;"	d
Dma_mIntDisable	xdma/xdma_hw.h	285;"	d
Dma_mIntEnable	xdma/xdma_hw.h	265;"	d
Dma_mOut32	xdma/xdma_hw.h	212;"	d
Dma_mPhysToVirt	xdma/xdma_bd.h	616;"	d
Dma_mPhysToVirt	xdma/xdma_bd.h	619;"	d
Dma_mReadReg	xdma/xdma_hw.h	229;"	d
Dma_mRingSeekahead	xdma/xdma_bdring.h	293;"	d
Dma_mRingSeekahead	xdma/xdma_bdring.h	306;"	d
Dma_mRingSeekback	xdma/xdma_bdring.h	335;"	d
Dma_mRingSeekback	xdma/xdma_bdring.h	348;"	d
Dma_mSetCrSr	xdma/xdma_hw.h	348;"	d
Dma_mVirtToPhys	xdma/xdma_bd.h	635;"	d
Dma_mVirtToPhys	xdma/xdma_bd.h	638;"	d
Dma_mWriteReg	xdma/xdma_hw.h	249;"	d
DriverState	xdma/xdma_base.c	/^u32 DriverState = UNINITIALIZED;$/;"	v
DriverState	xxgbeth0/xgadapter.c	/^	int DriverState;                \/* State of driver *\/$/;"	m	struct:net_local	file:
DriverState	xxgbeth1/xgadapter.c	/^	int DriverState;                \/* State of driver *\/$/;"	m	struct:net_local	file:
DriverState_beforeSusp	xxgbeth0/xgadapter.c	/^	int DriverState_beforeSusp;     \/* State of driver before Suspend *\/$/;"	m	struct:net_local	file:
DriverState_beforeSusp	xxgbeth1/xgadapter.c	/^	int DriverState_beforeSusp;     \/* State of driver before Suspend *\/$/;"	m	struct:net_local	file:
EMAC_REGS_N	xxgbeth0/xgadapter.c	1171;"	d	file:
EMAC_REGS_N	xxgbeth1/xgadapter.c	1171;"	d	file:
EMPTY_MASK_SHIFT	include/xdma_user.h	256;"	d
ENABLE_CRISCROSS	include/xpmon_be.h	217;"	d
ENABLE_LOOPBACK	include/xpmon_be.h	216;"	d
ENABLE_PKTCHK	include/xpmon_be.h	214;"	d
ENABLE_PKTGEN	include/xpmon_be.h	215;"	d
ENGINE_RX	xrawdata0/sguser.c	186;"	d	file:
ENGINE_RX	xrawdata0/sguser.c	193;"	d	file:
ENGINE_RX	xrawdata1/sguser.c	186;"	d	file:
ENGINE_RX	xrawdata1/sguser.c	193;"	d	file:
ENGINE_TX	xrawdata0/sguser.c	185;"	d	file:
ENGINE_TX	xrawdata0/sguser.c	192;"	d	file:
ENGINE_TX	xrawdata1/sguser.c	185;"	d	file:
ENGINE_TX	xrawdata1/sguser.c	192;"	d	file:
EQPool	xdma/xdma_base.c	/^void EQPool(struct PktPool * pp)$/;"	f
ETHERNET_APPMODE	include/xdma_user.h	267;"	d
Emac	xxgbeth0/xgadapter.c	/^	XXgEthernet Emac;$/;"	m	struct:net_local	file:
Emac	xxgbeth1/xgadapter.c	/^	XXgEthernet Emac;$/;"	m	struct:net_local	file:
EngState	include/xpmon_be.h	/^} EngState;$/;"	t	typeref:struct:__anon7
EngStatsArray	include/xpmon_be.h	/^} EngStatsArray;$/;"	t	typeref:struct:__anon9
Engine	include/xpmon_be.h	/^    int Engine;                 \/**< Engine Number *\/$/;"	m	struct:__anon12
Engine	include/xpmon_be.h	/^    int Engine;                 \/**< Engine Number *\/$/;"	m	struct:__anon16
Engine	include/xpmon_be.h	/^    int Engine;                 \/**< Engine Number *\/$/;"	m	struct:__anon7
Engine	include/xpmon_be.h	/^    int Engine;                 \/**< Engine Number *\/$/;"	m	struct:__anon8
EngineState	xdma/xdma.h	/^			u32 EngineState;        \/**< State of the DMA engine *\/$/;"	m	struct:__anon24
EngineState	xdma/xdma.h	/^    u32 EngineState;        \/**< State of the DMA engine *\/$/;"	m	struct:__anon25
ErrCnt	xrawdata0/sguser.c	/^unsigned int ErrCnt = 0;$/;"	v
ErrCnt	xrawdata1/sguser.c	/^unsigned int ErrCnt = 0;$/;"	v
ExtMcast	xxgbeth0/xxgethernet.h	/^	u8 ExtMcast;    \/**< Extend multicast indication *\/$/;"	m	struct:XXgEthernet_Config
ExtMcast	xxgbeth1/xxgethernet.h	/^	u8 ExtMcast;    \/**< Extend multicast indication *\/$/;"	m	struct:XXgEthernet_Config
FALSE	include/xbasic_types.h	91;"	d
FIFO_EMPTY_TIMEOUT	include/xdma_user.h	251;"	d
FULL_DUPLEX	xxgbeth0/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	e	enum:DUPLEX	file:
FULL_DUPLEX	xxgbeth1/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	e	enum:DUPLEX	file:
FirstBdAddr	xdma/xdma_bdring.h	/^		u32 FirstBdAddr;        \/**< Virtual address of 1st BD in list *\/$/;"	m	struct:__anon28
FirstBdAddr	xdma/xdma_bdring.h	/^		u64 FirstBdAddr;        \/**< Virtual address of 1st BD in list *\/$/;"	m	struct:__anon27
FirstBdPhysAddr	xdma/xdma_bdring.h	/^		u32 FirstBdPhysAddr;    \/**< Physical address of 1st BD in list *\/$/;"	m	struct:__anon28
FirstBdPhysAddr	xdma/xdma_bdring.h	/^		u64 FirstBdPhysAddr;    \/**< Physical address of 1st BD in list *\/$/;"	m	struct:__anon27
FirstBuf	xrawdata0/sguser.c	/^  int FirstBuf;$/;"	m	struct:__anon22	file:
FirstBuf	xrawdata1/sguser.c	/^  int FirstBuf;$/;"	m	struct:__anon23	file:
Flags	xxgbeth0/xxgethernet.h	/^	u32 Flags;		 \/**< Internal driver flags *\/$/;"	m	struct:XXgEthernet
Flags	xxgbeth1/xxgethernet.h	/^	u32 Flags;		 \/**< Internal driver flags *\/$/;"	m	struct:XXgEthernet
FreeCnt	xdma/xdma_bdring.h	/^		u32 FreeCnt;          \/**< Number of allocatable BDs in free group *\/$/;"	m	struct:__anon27
FreeCnt	xdma/xdma_bdring.h	/^		u32 FreeCnt;          \/**< Number of allocatable BDs in free group *\/$/;"	m	struct:__anon28
FreeHead	xdma/xdma_bdring.h	/^		Dma_Bd *FreeHead;       \/**< First BD in the free group *\/$/;"	m	struct:__anon27
FreeHead	xdma/xdma_bdring.h	/^		Dma_Bd *FreeHead;       \/**< First BD in the free group *\/$/;"	m	struct:__anon28
FreeInfo	include/xpmon_be.h	/^}FreeInfo;$/;"	t	typeref:struct:__anon19
FreePtr	xrawdata0/sguser.c	/^  int FreePtr;$/;"	m	struct:__anon22	file:
FreePtr	xrawdata1/sguser.c	/^  int FreePtr;$/;"	m	struct:__anon23	file:
HALF_DUPLEX	xxgbeth0/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	e	enum:DUPLEX	file:
HALF_DUPLEX	xxgbeth1/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	e	enum:DUPLEX	file:
HANDLE_0	include/xdma_user.h	259;"	d
HANDLE_1	include/xdma_user.h	260;"	d
HwCnt	xdma/xdma_bdring.h	/^		u32 HwCnt;              \/**< Number of BDs in work group *\/$/;"	m	struct:__anon27
HwCnt	xdma/xdma_bdring.h	/^		u32 HwCnt;              \/**< Number of BDs in work group *\/$/;"	m	struct:__anon28
HwHead	xdma/xdma_bdring.h	/^		Dma_Bd *HwHead;         \/**< First BD in the work group *\/$/;"	m	struct:__anon27
HwHead	xdma/xdma_bdring.h	/^		Dma_Bd *HwHead;         \/**< First BD in the work group *\/$/;"	m	struct:__anon28
HwTail	xdma/xdma_bdring.h	/^		Dma_Bd *HwTail;         \/**< Last BD in the work group *\/$/;"	m	struct:__anon27
HwTail	xdma/xdma_bdring.h	/^		Dma_Bd *HwTail;         \/**< Last BD in the work group *\/$/;"	m	struct:__anon28
IGET_DMA_STATISTICS	include/xpmon_be.h	176;"	d
IGET_ENG_STATE	include/xpmon_be.h	173;"	d
IGET_LED_STATISTICS	include/xpmon_be.h	191;"	d
IGET_PCI_STATE	include/xpmon_be.h	170;"	d
IGET_PMVAL	include/xpmon_be.h	206;"	d
IGET_SW_STATISTICS	include/xpmon_be.h	182;"	d
IGET_TEST_STATE	include/xpmon_be.h	161;"	d
IGET_TRN_RXUSRINFO	include/xpmon_be.h	188;"	d
IGET_TRN_STATISTICS	include/xpmon_be.h	179;"	d
IGET_TRN_TXUSRINFO	include/xpmon_be.h	185;"	d
INITIALIZED	include/xdma_user.h	226;"	d
INITIALIZED	xrawdata0/sguser.c	95;"	d	file:
INITIALIZED	xrawdata1/sguser.c	95;"	d	file:
INITIALIZED_FIRST	xxgbeth0/xgadapter.c	220;"	d	file:
INITIALIZED_FIRST	xxgbeth1/xgadapter.c	220;"	d	file:
INITIALIZED_SECOND	xxgbeth0/xgadapter.c	223;"	d	file:
INITIALIZED_SECOND	xxgbeth1/xgadapter.c	223;"	d	file:
INITIALIZED_TOP	xxgbeth0/xgadapter.c	219;"	d	file:
INITIALIZED_TOP	xxgbeth1/xgadapter.c	219;"	d	file:
INSMOD	include.mk	/^export INSMOD=\/sbin\/insmod$/;"	m
INT_COAL_CNT	xdma/xdma_hw.h	206;"	d
INT_LEGACY	include/xpmon_be.h	226;"	d
INT_MSI	include/xpmon_be.h	225;"	d
INT_MSIX	include/xpmon_be.h	224;"	d
INT_NONE	include/xpmon_be.h	227;"	d
ISET_PCI_LINKSPEED	include/xpmon_be.h	195;"	d
ISET_PCI_LINKWIDTH	include/xpmon_be.h	198;"	d
ISET_PCI_RUNTIME_RESUME	include/xpmon_be.h	204;"	d
ISET_PCI_RUNTIME_SUSPEND	include/xpmon_be.h	201;"	d
ISTART_TEST	include/xpmon_be.h	164;"	d
ISTOP_TEST	include/xpmon_be.h	167;"	d
InitFCCplD	include/xpmon_be.h	/^    int InitFCCplD;             \/**< Initial FC Credits for Completion Data *\/$/;"	m	struct:__anon6
InitFCCplH	include/xpmon_be.h	/^    int InitFCCplH;             \/**< Initial FC Credits for Completion Header *\/$/;"	m	struct:__anon6
InitFCNPD	include/xpmon_be.h	/^    int InitFCNPD;              \/**< Initial FC Credits for Non-Posted Data *\/$/;"	m	struct:__anon6
InitFCNPH	include/xpmon_be.h	/^    int InitFCNPH;              \/**< Initial FC Credits for Non-Posted Data *\/$/;"	m	struct:__anon6
InitFCPD	include/xpmon_be.h	/^    int InitFCPD;               \/**< Initial FC Credits for Posted Data *\/$/;"	m	struct:__anon6
InitFCPH	include/xpmon_be.h	/^    int InitFCPH;               \/**< Initial FC Credits for Posted Data *\/$/;"	m	struct:__anon6
InitHw	xxgbeth0/xxgethernet.c	/^static void InitHw(XXgEthernet *InstancePtr)$/;"	f	file:
InitHw	xxgbeth1/xxgethernet.c	/^static void InitHw(XXgEthernet *InstancePtr)$/;"	f	file:
IntEnab	include/xpmon_be.h	/^    int IntEnab;                \/**< Interrupts enabled or not *\/$/;"	m	struct:__anon7
IntMode	include/xpmon_be.h	/^    int IntMode;                \/**< Legacy or MSI interrupts *\/$/;"	m	struct:__anon6
IntrBH	xdma/xdma_base.c	/^static void IntrBH(unsigned long unused)$/;"	f	file:
IntrCheck	xdma/xdma_base.c	/^int IntrCheck(struct pci_dev * dev)$/;"	f
IsReady	xxgbeth0/xxgethernet.h	/^	u32 IsReady;		 \/**< Device is initialized and ready *\/$/;"	m	struct:XXgEthernet
IsReady	xxgbeth1/xxgethernet.h	/^	u32 IsReady;		 \/**< Device is initialized and ready *\/$/;"	m	struct:XXgEthernet
IsRxChannel	xdma/xdma_bdring.h	/^		u32 IsRxChannel;        \/**< Is this a receive channel ? *\/$/;"	m	struct:__anon27
IsRxChannel	xdma/xdma_bdring.h	/^		u32 IsRxChannel;        \/**< Is this a receive channel ? *\/$/;"	m	struct:__anon28
IsStarted	xxgbeth0/xxgethernet.h	/^	u32 IsStarted;		 \/**< Device is currently started *\/$/;"	m	struct:XXgEthernet
IsStarted	xxgbeth1/xxgethernet.h	/^	u32 IsStarted;		 \/**< Device is currently started *\/$/;"	m	struct:XXgEthernet
KDIR	include.mk	/^export KDIR= \/lib\/modules\/$(shell uname -r)\/build$/;"	m
LAT	include/xpmon_be.h	/^    unsigned int LAT;           \/**< Last Active Time *\/$/;"	m	struct:__anon8
LBITS	Makefile	/^LBITS := $(shell getconf LONG_BIT)$/;"	m
LBR	include/xpmon_be.h	/^    unsigned int LBR;           \/**< Last Byte Rate *\/$/;"	m	struct:__anon12
LBR	include/xpmon_be.h	/^    unsigned int LBR;           \/**< Last Byte Rate *\/$/;"	m	struct:__anon8
LINK_DOWN	include/xpmon_be.h	221;"	d
LINK_SPEED_25	include/xpmon_be.h	228;"	d
LINK_SPEED_5	include/xpmon_be.h	229;"	d
LINK_UP	include/xpmon_be.h	220;"	d
LOOPBACK	xrawdata0/sguser.c	164;"	d	file:
LOOPBACK	xrawdata0/sguser.c	176;"	d	file:
LOOPBACK	xrawdata1/sguser.c	164;"	d	file:
LOOPBACK	xrawdata1/sguser.c	176;"	d	file:
LRX	include/xpmon_be.h	/^    unsigned int LRX;           \/**< Last RX Byte Rate *\/$/;"	m	struct:__anon10
LTX	include/xpmon_be.h	/^    unsigned int LTX;           \/**< Last TX Byte Rate *\/$/;"	m	struct:__anon10
LWT	include/xpmon_be.h	/^    unsigned int LWT;           \/**< Last Wait Time *\/$/;"	m	struct:__anon8
LastBdAddr	xdma/xdma_bdring.h	/^		u32 LastBdAddr;         \/**< Virtual address of last BD in the list *\/$/;"	m	struct:__anon28
LastBdAddr	xdma/xdma_bdring.h	/^		u64 LastBdAddr;         \/**< Virtual address of last BD in the list *\/$/;"	m	struct:__anon27
LastBuf	xrawdata0/sguser.c	/^  int LastBuf;$/;"	m	struct:__anon22	file:
LastBuf	xrawdata1/sguser.c	/^  int LastBuf;$/;"	m	struct:__anon23	file:
LastIntr	xdma/xdma_base.c	/^int LastIntr[MAX_DMA_ENGINES]={ 0, };$/;"	v
LedStats	include/xpmon_be.h	/^} LedStats;$/;"	t	typeref:struct:__anon17
Length	xdma/xdma_bdring.h	/^		u32 Length;             \/**< Total size of ring in bytes *\/$/;"	m	struct:__anon27
Length	xdma/xdma_bdring.h	/^		u32 Length;             \/**< Total size of ring in bytes *\/$/;"	m	struct:__anon28
LinkSpeed	include/xpmon_be.h	/^    int LinkSpeed;              \/**< Direct change in Link Speed *\/$/;"	m	struct:__anon14
LinkSpeed	include/xpmon_be.h	/^    int LinkSpeed;              \/**< Link Speed *\/$/;"	m	struct:__anon6
LinkState	include/xdma_user.h	/^    int LinkState;              \/**< Link State *\/$/;"	m	struct:__anon2
LinkState	include/xpmon_be.h	/^    int LinkState;              \/**< Link State - up or down *\/$/;"	m	struct:__anon6
LinkUpCap	include/xpmon_be.h	/^	int LinkUpCap;              \/**< Link up configurable capability *\/$/;"	m	struct:__anon6
LinkWidth	include/xpmon_be.h	/^    int LinkWidth;              \/**< Direct change in Link Width *\/$/;"	m	struct:__anon14
LinkWidth	include/xpmon_be.h	/^    int LinkWidth;              \/**< Link Width *\/$/;"	m	struct:__anon6
Lower	include/xbasic_types.h	/^  Xuint32 Lower;$/;"	m	struct:__anon5
MAXPKTSIZE	xrawdata0/sguser.c	203;"	d	file:
MAXPKTSIZE	xrawdata0/sguser.c	205;"	d	file:
MAXPKTSIZE	xrawdata1/sguser.c	203;"	d	file:
MAXPKTSIZE	xrawdata1/sguser.c	205;"	d	file:
MAX_BARS	xdma/xdma.h	430;"	d
MAX_BUFF_INFO	xrawdata0/sguser.c	271;"	d	file:
MAX_BUFF_INFO	xrawdata1/sguser.c	271;"	d	file:
MAX_DMA_ENGINES	xdma/xdma.h	431;"	d
MAX_ENGS	include/xpmon_be.h	235;"	d
MAX_LIST	include/xpmon_be.h	369;"	d
MAX_POOL	xdma/xdma_base.c	158;"	d	file:
MAX_QUEUE_THRESHOLD	xrawdata0/sguser.c	231;"	d	file:
MAX_QUEUE_THRESHOLD	xrawdata1/sguser.c	231;"	d	file:
MAX_SIZE_DONE	include/xpmon_be.h	239;"	d
MAX_STATS	xdma/xdma_base.c	161;"	d	file:
MAX_TRN	include/xpmon_be.h	236;"	d
MDIO_ConfigWord_0	xrawdata0/sguser.c	138;"	d	file:
MDIO_ConfigWord_0	xrawdata1/sguser.c	138;"	d	file:
MDIO_ConfigWord_1	xrawdata0/sguser.c	139;"	d	file:
MDIO_ConfigWord_1	xrawdata1/sguser.c	139;"	d	file:
MDIO_LINK_STATUS_UP	xrawdata0/sguser.c	145;"	d	file:
MDIO_LINK_STATUS_UP	xrawdata1/sguser.c	145;"	d	file:
MDIO_READY	xrawdata0/sguser.c	144;"	d	file:
MDIO_READY	xrawdata1/sguser.c	144;"	d	file:
MDIO_RX_DATA	xrawdata0/sguser.c	141;"	d	file:
MDIO_RX_DATA	xrawdata1/sguser.c	141;"	d	file:
MDIO_TX_DATA	xrawdata0/sguser.c	140;"	d	file:
MDIO_TX_DATA	xrawdata1/sguser.c	140;"	d	file:
MINPKTSIZE	xrawdata0/sguser.c	210;"	d	file:
MINPKTSIZE	xrawdata1/sguser.c	210;"	d	file:
MIN_QUEUE_THRESHOLD	xrawdata0/sguser.c	232;"	d	file:
MIN_QUEUE_THRESHOLD	xrawdata1/sguser.c	232;"	d	file:
MInitFCCplD	xdma/xdma_base.c	167;"	d	file:
MInitFCCplH	xdma/xdma_base.c	168;"	d	file:
MInitFCNPD	xdma/xdma_base.c	169;"	d	file:
MInitFCNPH	xdma/xdma_base.c	170;"	d	file:
MInitFCPD	xdma/xdma_base.c	171;"	d	file:
MInitFCPH	xdma/xdma_base.c	172;"	d	file:
MKNOD	include.mk	/^MKNOD = `awk '\/$(DMA_STATS_FILE)\/ {print $$1}' \/proc\/devices`$/;"	m
MKNOD0	include.mk	/^MKNOD0 =`awk '\/$(RAW0_FILE_NAME)\/ {print $$1}' \/proc\/devices`$/;"	m
MKNOD1	include.mk	/^MKNOD1 =`awk '\/$(RAW1_FILE_NAME)\/ {print $$1}' \/proc\/devices`$/;"	m
MKNOD_CMD	include.mk	/^export MKNOD_CMD=\/bin\/mknod$/;"	m
MPS	include/xpmon_be.h	/^    int MPS;                    \/**< Max Payload Size *\/$/;"	m	struct:__anon6
MRRS	include/xpmon_be.h	/^    int MRRS;                   \/**< Max Read Request Size *\/$/;"	m	struct:__anon6
MSIEnabled	xdma/xdma_base.c	/^int MSIEnabled=0;$/;"	v
MYBAR	xrawdata0/sguser.c	102;"	d	file:
MYBAR	xrawdata1/sguser.c	102;"	d	file:
MYHANDLE	xrawdata0/sguser.c	105;"	d	file:
MYHANDLE	xrawdata0/sguser.c	107;"	d	file:
MYHANDLE	xrawdata1/sguser.c	105;"	d	file:
MYHANDLE	xrawdata1/sguser.c	107;"	d	file:
MYNAME	xrawdata0/sguser.c	111;"	d	file:
MYNAME	xrawdata0/sguser.c	114;"	d	file:
MYNAME	xrawdata1/sguser.c	111;"	d	file:
MYNAME	xrawdata1/sguser.c	114;"	d	file:
MaxPktSize	include/xdma_user.h	/^    int MaxPktSize;             \/**< Max Packet Size *\/$/;"	m	struct:__anon2
MaxPktSize	include/xpmon_be.h	/^    unsigned int MaxPktSize;    \/**< Max packet size *\/$/;"	m	struct:__anon16
MaxPktSize	include/xpmon_be.h	/^    unsigned int MaxPktSize;    \/**< Maximum packet size *\/$/;"	m	struct:__anon7
MinPktSize	include/xdma_user.h	/^    int MinPktSize;             \/**< Min Packet Size *\/$/;"	m	struct:__anon2
MinPktSize	include/xpmon_be.h	/^    unsigned int MinPktSize;    \/**< Min packet size *\/$/;"	m	struct:__anon16
MinPktSize	include/xpmon_be.h	/^    unsigned int MinPktSize;    \/**< Minimum packet size *\/$/;"	m	struct:__anon7
NO_BP	xrawdata0/sguser.c	229;"	d	file:
NO_BP	xrawdata1/sguser.c	229;"	d	file:
NULL	include/xbasic_types.h	95;"	d
NUM_BUFS	xrawdata0/sguser.c	211;"	d	file:
NUM_BUFS	xrawdata1/sguser.c	211;"	d	file:
NW_PATH_OFFSET	xrawdata0/sguser.c	188;"	d	file:
NW_PATH_OFFSET	xrawdata0/sguser.c	195;"	d	file:
NW_PATH_OFFSET	xrawdata1/sguser.c	188;"	d	file:
NW_PATH_OFFSET	xrawdata1/sguser.c	195;"	d	file:
NW_PATH_OFFSET	xxgbeth0/xgadapter.c	204;"	d	file:
NW_PATH_OFFSET	xxgbeth0/xgadapter.c	210;"	d	file:
NW_PATH_OFFSET	xxgbeth1/xgadapter.c	204;"	d	file:
NW_PATH_OFFSET	xxgbeth1/xgadapter.c	210;"	d	file:
NW_PATH_OFFSET_OTHER	xrawdata0/sguser.c	189;"	d	file:
NW_PATH_OFFSET_OTHER	xrawdata0/sguser.c	196;"	d	file:
NW_PATH_OFFSET_OTHER	xrawdata1/sguser.c	189;"	d	file:
NW_PATH_OFFSET_OTHER	xrawdata1/sguser.c	196;"	d	file:
OS_TYPE	Makefile	/^export OS_TYPE=32$/;"	m
OS_TYPE	Makefile	/^export OS_TYPE=64$/;"	m
Options	xxgbeth0/xxgethernet.h	/^	u32 Options;		 \/**< Current options word *\/$/;"	m	struct:XXgEthernet
Options	xxgbeth1/xxgethernet.h	/^	u32 Options;		 \/**< Current options word *\/$/;"	m	struct:XXgEthernet
PCIE_CAP_REG	xdma/xdma_base.c	2561;"	d	file:
PCIE_CTRL_REG	xdma/xdma_base.c	2562;"	d	file:
PCIE_DESIGN_VERSION	xdma/xdma_base.c	173;"	d	file:
PCIE_STS_REG	xdma/xdma_base.c	2563;"	d	file:
PCIState	include/xpmon_be.h	/^} PCIState;$/;"	t	typeref:struct:__anon6
PCI_DEVICE_ID_DMA	xdma/xdma_base.c	115;"	d	file:
PCI_VENDOR_ID_DMA	xdma/xdma_base.c	113;"	d	file:
PERFORMANCE_MODE	include/xdma_user.h	266;"	d
PERF_DESIGN_MODE	xrawdata0/sguser.c	120;"	d	file:
PERF_DESIGN_MODE	xrawdata0/sguser.c	122;"	d	file:
PERF_DESIGN_MODE	xrawdata1/sguser.c	120;"	d	file:
PERF_DESIGN_MODE	xrawdata1/sguser.c	122;"	d	file:
PERF_DESIGN_MODE	xxgbeth0/xgadapter.c	216;"	d	file:
PERF_DESIGN_MODE	xxgbeth1/xgadapter.c	216;"	d	file:
PKTCHKR	xrawdata0/sguser.c	180;"	d	file:
PKTCHKR	xrawdata1/sguser.c	180;"	d	file:
PKTGENR	xrawdata0/sguser.c	181;"	d	file:
PKTGENR	xrawdata1/sguser.c	181;"	d	file:
PKT_ALL	include/xdma_user.h	243;"	d
PKT_EOP	include/xdma_user.h	240;"	d
PKT_ERROR	include/xdma_user.h	241;"	d
PKT_SIZE_ADDRESS	xrawdata0/sguser.c	158;"	d	file:
PKT_SIZE_ADDRESS	xrawdata0/sguser.c	170;"	d	file:
PKT_SIZE_ADDRESS	xrawdata1/sguser.c	158;"	d	file:
PKT_SIZE_ADDRESS	xrawdata1/sguser.c	170;"	d	file:
PKT_SOP	include/xdma_user.h	239;"	d
PKT_UNUSED	include/xdma_user.h	242;"	d
PM_OPS	xdma/xdma_base.c	782;"	d	file:
PM_OPS	xdma/xdma_base.c	784;"	d	file:
PM_PREPARE	include/xdma_user.h	230;"	d
PM_SUSPEND	xxgbeth0/xgadapter.c	230;"	d	file:
PM_SUSPEND	xxgbeth1/xgadapter.c	230;"	d	file:
POLLING	xrawdata0/sguser.c	97;"	d	file:
POLLING	xrawdata1/sguser.c	97;"	d	file:
PVTMON_MGT_AVCC	xdma/xdma_base.c	182;"	d	file:
PVTMON_MGT_AVTT	xdma/xdma_base.c	183;"	d	file:
PVTMON_MGT_VCCAUX	xdma/xdma_base.c	186;"	d	file:
PVTMON_RSVD	xdma/xdma_base.c	187;"	d	file:
PVTMON_VADJ	xdma/xdma_base.c	179;"	d	file:
PVTMON_VCC1V5	xdma/xdma_base.c	181;"	d	file:
PVTMON_VCC2V5	xdma/xdma_base.c	180;"	d	file:
PVTMON_VCC3V3	xdma/xdma_base.c	178;"	d	file:
PVTMON_VCCAUX	xdma/xdma_base.c	177;"	d	file:
PVTMON_VCCAUX_IO	xdma/xdma_base.c	184;"	d	file:
PVTMON_VCCINT	xdma/xdma_base.c	176;"	d	file:
PVTMON_VCC_BRAM	xdma/xdma_base.c	185;"	d	file:
PendingMask	xdma/xdma_base.c	/^unsigned long long PendingMask = 0x0LL;$/;"	v
Phy0	include/xpmon_be.h	/^	int Phy0;                   \/**< PHY0 Link status *\/$/;"	m	struct:__anon17
Phy1	include/xpmon_be.h	/^	int Phy1;                   \/**< PHY1 Link status *\/$/;"	m	struct:__anon17
Pkt	xxgbeth0/xgadapter.c	/^PktBuf Pkt[MAX_SKB_FRAGS];$/;"	v
Pkt	xxgbeth1/xgadapter.c	/^PktBuf Pkt[MAX_SKB_FRAGS];$/;"	v
PktBuf	include/xdma_user.h	/^} PktBuf;$/;"	t	typeref:struct:__anon1
PktHandler	xdma/xdma_base.c	/^static void PktHandler(int eng, Dma_Engine * eptr)$/;"	f	file:
PktPool	xdma/xdma_base.c	/^struct PktPool$/;"	s	file:
PostCnt	xdma/xdma_bdring.h	/^		u32 PostCnt;          \/**< Number of BDs in post-work group *\/$/;"	m	struct:__anon27
PostCnt	xdma/xdma_bdring.h	/^		u32 PostCnt;          \/**< Number of BDs in post-work group *\/$/;"	m	struct:__anon28
PostHead	xdma/xdma_bdring.h	/^		Dma_Bd *PostHead;       \/**< First BD in the post-work group *\/$/;"	m	struct:__anon27
PostHead	xdma/xdma_bdring.h	/^		Dma_Bd *PostHead;       \/**< First BD in the post-work group *\/$/;"	m	struct:__anon28
PowerMonitorVal	include/xpmon_be.h	/^}PowerMonitorVal;$/;"	t	typeref:struct:__anon15
PreCnt	xdma/xdma_bdring.h	/^		u32 PreCnt;             \/**< Number of BDs in pre-work group *\/$/;"	m	struct:__anon27
PreCnt	xdma/xdma_bdring.h	/^		u32 PreCnt;             \/**< Number of BDs in pre-work group *\/$/;"	m	struct:__anon28
PreHead	xdma/xdma_bdring.h	/^		Dma_Bd *PreHead;        \/**< First BD in the pre-work group *\/$/;"	m	struct:__anon27
PreHead	xdma/xdma_bdring.h	/^		Dma_Bd *PreHead;        \/**< First BD in the pre-work group *\/$/;"	m	struct:__anon28
PrintSummary	xrawdata0/sguser.c	/^PrintSummary (void)$/;"	f	file:
PrintSummary	xrawdata1/sguser.c	/^PrintSummary (void)$/;"	f	file:
PutUnusedPkts	xdma/xdma_base.c	/^static void PutUnusedPkts(Dma_Engine * eptr, PktBuf * pbuf, int numpkts)$/;"	f	file:
QFAILURE	xrawdata0/sguser.c	798;"	d	file:
QFAILURE	xrawdata1/sguser.c	796;"	d	file:
QSUCCESS	xrawdata0/sguser.c	797;"	d	file:
QSUCCESS	xrawdata1/sguser.c	795;"	d	file:
RAW0_DRIVER_NAME	include.mk	/^export RAW0_DRIVER_NAME=xrawdata0.ko$/;"	m
RAW0_FILE_NAME	include.mk	/^export RAW0_FILE_NAME=xraw_data0$/;"	m
RAW1_DRIVER_NAME	include.mk	/^export RAW1_DRIVER_NAME=xrawdata1.ko$/;"	m
RAW1_FILE_NAME	include.mk	/^export RAW1_FILE_NAME=xraw_data1$/;"	m
RAWETHERNET_MODE	include/xdma_user.h	268;"	d
RDBURST_0	xrawdata0/sguser.c	131;"	d	file:
RDBURST_0	xrawdata1/sguser.c	131;"	d	file:
RDBURST_1	xrawdata0/sguser.c	132;"	d	file:
RDBURST_1	xrawdata1/sguser.c	132;"	d	file:
RDBURST_2	xrawdata0/sguser.c	133;"	d	file:
RDBURST_2	xrawdata1/sguser.c	133;"	d	file:
RDBURST_3	xrawdata0/sguser.c	134;"	d	file:
RDBURST_3	xrawdata1/sguser.c	134;"	d	file:
READY	xxgbeth0/xgadapter.c	226;"	d	file:
READY	xxgbeth1/xgadapter.c	226;"	d	file:
READ_FROM_CARD	xrawdata0/sguser.c	894;"	d	file:
READ_FROM_CARD	xrawdata1/sguser.c	892;"	d	file:
REGISTERED	xrawdata0/sguser.c	98;"	d	file:
REGISTERED	xrawdata1/sguser.c	98;"	d	file:
REG_DMA_CTRL_STATUS	xdma/xdma_hw.h	91;"	d
REG_DMA_ENG_ACTIVE_TIME	xdma/xdma_hw.h	102;"	d
REG_DMA_ENG_ACTIVE_TIME_SHIFT	xdma/xdma_hw.h	195;"	d
REG_DMA_ENG_CAP	xdma/xdma_hw.h	97;"	d
REG_DMA_ENG_COMP_BYTES	xdma/xdma_hw.h	104;"	d
REG_DMA_ENG_COMP_BYTES_SHIFT	xdma/xdma_hw.h	197;"	d
REG_DMA_ENG_CTRL_STATUS	xdma/xdma_hw.h	98;"	d
REG_DMA_ENG_LAST_BD	xdma/xdma_hw.h	101;"	d
REG_DMA_ENG_NEXT_BD	xdma/xdma_hw.h	99;"	d
REG_DMA_ENG_WAIT_TIME	xdma/xdma_hw.h	103;"	d
REG_DMA_ENG_WAIT_TIME_SHIFT	xdma/xdma_hw.h	196;"	d
REG_DMA_SAMPLE_CTR_MASK	xdma/xdma_hw.h	192;"	d
REG_SW_NEXT_BD	xdma/xdma_hw.h	100;"	d
RM	include.mk	/^export RM=\/bin\/rm$/;"	m
RMMOD	include.mk	/^export RMMOD=\/sbin\/rmmod$/;"	m
ROOTDIR	Makefile	/^export ROOTDIR=$(shell pwd)$/;"	m
RX_CONFIG_ADDRESS	xrawdata0/sguser.c	157;"	d	file:
RX_CONFIG_ADDRESS	xrawdata0/sguser.c	169;"	d	file:
RX_CONFIG_ADDRESS	xrawdata1/sguser.c	157;"	d	file:
RX_CONFIG_ADDRESS	xrawdata1/sguser.c	169;"	d	file:
RX_ENGINE	xxgbeth0/xgadapter.c	203;"	d	file:
RX_ENGINE	xxgbeth0/xgadapter.c	209;"	d	file:
RX_ENGINE	xxgbeth1/xgadapter.c	203;"	d	file:
RX_ENGINE	xxgbeth1/xgadapter.c	209;"	d	file:
RX_MODE	include/xpmon_be.h	238;"	d
RX_UTIL_BC	xdma/xdma_base.c	164;"	d	file:
RXbarbase	xrawdata0/sguser.c	/^u32 TXbarbase, RXbarbase;$/;"	v
RXbarbase	xrawdata0/sguser.c	/^u64 TXbarbase, RXbarbase;$/;"	v
RXbarbase	xrawdata1/sguser.c	/^u32 TXbarbase, RXbarbase;$/;"	v
RXbarbase	xrawdata1/sguser.c	/^u64 TXbarbase, RXbarbase;$/;"	v
RawLock	xrawdata0/sguser.c	/^spinlock_t RawLock;$/;"	v
RawLock	xrawdata1/sguser.c	/^spinlock_t RawLock;$/;"	v
RawMaxPktSize	xrawdata0/sguser.c	/^u32 RawMinPktSize = MINPKTSIZE, RawMaxPktSize = MAXPKTSIZE;$/;"	v
RawMaxPktSize	xrawdata1/sguser.c	/^u32 RawMinPktSize = MINPKTSIZE, RawMaxPktSize = MAXPKTSIZE;$/;"	v
RawMinPktSize	xrawdata0/sguser.c	/^u32 RawMinPktSize = MINPKTSIZE, RawMaxPktSize = MAXPKTSIZE;$/;"	v
RawMinPktSize	xrawdata1/sguser.c	/^u32 RawMinPktSize = MINPKTSIZE, RawMaxPktSize = MAXPKTSIZE;$/;"	v
RawTestMode	xrawdata0/sguser.c	/^u32 RawTestMode = TEST_STOP;$/;"	v
RawTestMode	xrawdata1/sguser.c	/^u32 RawTestMode = TEST_STOP;$/;"	v
ReadConfig	xdma/xdma_base.c	/^static void ReadConfig(struct pci_dev * pdev)$/;"	f	file:
ReadDMAEngineConfiguration	xdma/xdma_base.c	/^static void ReadDMAEngineConfiguration(struct pci_dev * pdev, struct privData * dmaInfo)$/;"	f	file:
ReadPCIState	xdma/xdma_base.c	/^static int ReadPCIState(struct pci_dev * pdev, PCIState * pcistate)$/;"	f	file:
ReadRoot	xdma/xdma_base.c	/^static void ReadRoot(struct pci_dev * pdev)$/;"	f	file:
RegBase	xdma/xdma.h	/^			u32 RegBase;            \/**< Virtual base address of DMA engine *\/$/;"	m	struct:__anon25
RegBase	xdma/xdma.h	/^			u64 RegBase;            \/**< Virtual base address of DMA engine *\/$/;"	m	struct:__anon24
RunState	xdma/xdma_bdring.h	/^		u32 RunState;         \/**< Flag to indicate state of engine\/ring *\/$/;"	m	struct:__anon27
RunState	xdma/xdma_bdring.h	/^		u32 RunState;         \/**< Flag to indicate state of engine\/ring *\/$/;"	m	struct:__anon28
RxBufCnt	xrawdata0/sguser.c	/^unsigned int RxBufCnt = 0;$/;"	v
RxBufCnt	xrawdata1/sguser.c	/^unsigned int RxBufCnt = 0;$/;"	v
RxBufs	xrawdata0/sguser.c	/^Buffer RxBufs;$/;"	v
RxBufs	xrawdata1/sguser.c	/^Buffer RxBufs;$/;"	v
RxDoneQ	xrawdata0/sguser.c	/^BufferInfoQue RxDoneQ;		\/\/ assuming everything to be initialized to 0 as these are global$/;"	v
RxDoneQ	xrawdata1/sguser.c	/^BufferInfoQue RxDoneQ;		\/\/ assuming everything to be initialized to 0 as these are global$/;"	v
RxHandle	xxgbeth0/xgadapter.c	/^	void * RxHandle;                \/* Handle of RX DMA engine *\/$/;"	m	struct:net_local	file:
RxHandle	xxgbeth1/xgadapter.c	/^	void * RxHandle;                \/* Handle of RX DMA engine *\/$/;"	m	struct:net_local	file:
RxUsrInfo	include/xpmon_be.h	/^} RxUsrInfo;$/;"	t	typeref:struct:__anon21
RxVlanStrp	xxgbeth0/xxgethernet.h	/^	u8 RxVlanStrp;  \/**< RX VLAN stripping indication *\/$/;"	m	struct:XXgEthernet_Config
RxVlanStrp	xxgbeth1/xxgethernet.h	/^	u8 RxVlanStrp;  \/**< RX VLAN stripping indication *\/$/;"	m	struct:XXgEthernet_Config
RxVlanTag	xxgbeth0/xxgethernet.h	/^	u8 RxVlanTag;   \/**< RX VLAN tagging indication *\/$/;"	m	struct:XXgEthernet_Config
RxVlanTag	xxgbeth1/xxgethernet.h	/^	u8 RxVlanTag;   \/**< RX VLAN tagging indication *\/$/;"	m	struct:XXgEthernet_Config
RxVlanTran	xxgbeth0/xxgethernet.h	/^	u8 RxVlanTran;  \/**< RX VLAN Translation indication *\/$/;"	m	struct:XXgEthernet_Config
RxVlanTran	xxgbeth1/xxgethernet.h	/^	u8 RxVlanTran;  \/**< RX VLAN Translation indication *\/$/;"	m	struct:XXgEthernet_Config
SEQNO_WRAP_REG	xrawdata0/sguser.c	161;"	d	file:
SEQNO_WRAP_REG	xrawdata0/sguser.c	173;"	d	file:
SEQNO_WRAP_REG	xrawdata1/sguser.c	161;"	d	file:
SEQNO_WRAP_REG	xrawdata1/sguser.c	173;"	d	file:
SLEEP_TIME	include.mk	/^export SLEEP_TIME=1$/;"	m
SStats	xdma/xdma_base.c	/^SWStatistics SStats[MAX_DMA_ENGINES][MAX_STATS];$/;"	v
STABILITY_WAIT_TIME	include/xdma_user.h	250;"	d
STATUS_ADDRESS	xrawdata0/sguser.c	159;"	d	file:
STATUS_ADDRESS	xrawdata0/sguser.c	171;"	d	file:
STATUS_ADDRESS	xrawdata1/sguser.c	159;"	d	file:
STATUS_ADDRESS	xrawdata1/sguser.c	171;"	d	file:
STATUS_REG_OFFSET	include/xdma_user.h	246;"	d
SWStatistics	include/xpmon_be.h	/^} SWStatistics;$/;"	t	typeref:struct:__anon12
SWStatsArray	include/xpmon_be.h	/^} SWStatsArray;$/;"	t	typeref:struct:__anon13
SWrate	xdma/xdma_base.c	/^u32 SWrate[MAX_DMA_ENGINES];$/;"	v
SYNCHRONIZE_IO	include/xio.h	101;"	d
SYNCHRONIZE_IO	include/xio.h	99;"	d
Separation	xdma/xdma_bdring.h	/^		u32 Separation;         \/**< Number of bytes between the starting$/;"	m	struct:__anon27
Separation	xdma/xdma_bdring.h	/^		u32 Separation;         \/**< Number of bytes between the starting$/;"	m	struct:__anon28
SetLinkSpeed	xdma/xdma_base.c	/^static int SetLinkSpeed(struct pci_dev * pdev, DirectLinkChg * dl)$/;"	f	file:
SetLinkWidth	xdma/xdma_base.c	/^static int SetLinkWidth(struct pci_dev * pdev, DirectLinkChg * dl)$/;"	f	file:
SetRuntimeResume	xdma/xdma_base.c	/^static int SetRuntimeResume(struct pci_dev * pdev)$/;"	f	file:
SetRuntimeSuspend	xdma/xdma_base.c	/^static int SetRuntimeSuspend(struct pci_dev * pdev)$/;"	f	file:
Stats	xxgbeth0/xxgethernet.h	/^	u8 Stats;	\/**< Statistics gathering option *\/$/;"	m	struct:XXgEthernet_Config
Stats	xxgbeth1/xxgethernet.h	/^	u8 Stats;	\/**< Statistics gathering option *\/$/;"	m	struct:XXgEthernet_Config
TEMAC_BAR	xxgbeth0/xgadapter.c	233;"	d	file:
TEMAC_BAR	xxgbeth1/xgadapter.c	233;"	d	file:
TEMAC_OFFSET	xxgbeth0/xgadapter.c	234;"	d	file:
TEMAC_OFFSET	xxgbeth1/xgadapter.c	234;"	d	file:
TEMAC_PKTSIZE	xxgbeth0/xgadapter.c	236;"	d	file:
TEMAC_PKTSIZE	xxgbeth1/xgadapter.c	236;"	d	file:
TEMAC_SIZE	xxgbeth0/xgadapter.c	235;"	d	file:
TEMAC_SIZE	xxgbeth1/xgadapter.c	235;"	d	file:
TEST_IN_PROGRESS	include/xpmon_be.h	212;"	d
TEST_START	include/xpmon_be.h	211;"	d
TEST_STOP	include/xpmon_be.h	210;"	d
TRNStatistics	include/xpmon_be.h	/^} TRNStatistics;$/;"	t	typeref:struct:__anon10
TRNStatsArray	include/xpmon_be.h	/^} TRNStatsArray;$/;"	t	typeref:struct:__anon11
TRUE	include/xbasic_types.h	87;"	d
TStats	xdma/xdma_base.c	/^TRNStatistics TStats[MAX_STATS];$/;"	v
TX_CONFIG_ADDRESS	xrawdata0/sguser.c	156;"	d	file:
TX_CONFIG_ADDRESS	xrawdata0/sguser.c	168;"	d	file:
TX_CONFIG_ADDRESS	xrawdata1/sguser.c	156;"	d	file:
TX_CONFIG_ADDRESS	xrawdata1/sguser.c	168;"	d	file:
TX_CONFIG_SEQNO	include/xpmon_be.h	241;"	d
TX_ENGINE	xxgbeth0/xgadapter.c	202;"	d	file:
TX_ENGINE	xxgbeth0/xgadapter.c	208;"	d	file:
TX_ENGINE	xxgbeth1/xgadapter.c	202;"	d	file:
TX_ENGINE	xxgbeth1/xgadapter.c	208;"	d	file:
TX_MODE	include/xpmon_be.h	237;"	d
TX_TIMEOUT	xxgbeth0/xgadapter.c	251;"	d	file:
TX_TIMEOUT	xxgbeth1/xgadapter.c	251;"	d	file:
TX_UTIL_BC	xdma/xdma_base.c	163;"	d	file:
TXbarbase	xrawdata0/sguser.c	/^u32 TXbarbase, RXbarbase;$/;"	v
TXbarbase	xrawdata0/sguser.c	/^u64 TXbarbase, RXbarbase;$/;"	v
TXbarbase	xrawdata1/sguser.c	/^u32 TXbarbase, RXbarbase;$/;"	v
TXbarbase	xrawdata1/sguser.c	/^u64 TXbarbase, RXbarbase;$/;"	v
TemacType	xxgbeth0/xxgethernet.h	/^u8 TemacType;   \/**< Temac Type can have 3 possible values. They are$/;"	m	struct:XXgEthernet_Config
TemacType	xxgbeth1/xxgethernet.h	/^u8 TemacType;   \/**< Temac Type can have 3 possible values. They are$/;"	m	struct:XXgEthernet_Config
TestCmd	include/xpmon_be.h	/^} TestCmd;$/;"	t	typeref:struct:__anon16
TestMode	include/xdma_user.h	/^    unsigned int TestMode;      \/**< Test Mode *\/$/;"	m	struct:__anon2
TestMode	include/xpmon_be.h	/^    unsigned int TestMode;      \/**< Current Test Mode *\/$/;"	m	struct:__anon7
TestMode	include/xpmon_be.h	/^    unsigned int TestMode;      \/**< Test Mode - Enable TX, Enable loopback *\/$/;"	m	struct:__anon16
TestStop	xrawdata0/sguser.c	/^static int TestStop=0;$/;"	v	file:
TestStop	xrawdata1/sguser.c	/^static int TestStop=0;$/;"	v	file:
TotalNum	xrawdata0/sguser.c	/^  int TotalNum;$/;"	m	struct:__anon22	file:
TotalNum	xrawdata1/sguser.c	/^  int TotalNum;$/;"	m	struct:__anon23	file:
TxBufCnt	xrawdata0/sguser.c	/^unsigned int TxBufCnt = 0;$/;"	v
TxBufCnt	xrawdata1/sguser.c	/^unsigned int TxBufCnt = 0;$/;"	v
TxBufs	xrawdata0/sguser.c	/^Buffer TxBufs;$/;"	v
TxBufs	xrawdata1/sguser.c	/^Buffer TxBufs;$/;"	v
TxDoneQ	xrawdata0/sguser.c	/^BufferInfoQue TxDoneQ;		\/\/ assuming everything to be initialized to 0 as these are global$/;"	v
TxDoneQ	xrawdata1/sguser.c	/^BufferInfoQue TxDoneQ;		\/\/ assuming everything to be initialized to 0 as these are global$/;"	v
TxHandle	xxgbeth0/xgadapter.c	/^	void * TxHandle;                \/* Handle of TX DMA engine *\/$/;"	m	struct:net_local	file:
TxHandle	xxgbeth1/xgadapter.c	/^	void * TxHandle;                \/* Handle of TX DMA engine *\/$/;"	m	struct:net_local	file:
TxUsrInfo	include/xpmon_be.h	/^} TxUsrInfo;$/;"	t	typeref:struct:__anon20
TxVlanStrp	xxgbeth0/xxgethernet.h	/^	u8 TxVlanStrp;  \/**< TX VLAN stripping indication *\/$/;"	m	struct:XXgEthernet_Config
TxVlanStrp	xxgbeth1/xxgethernet.h	/^	u8 TxVlanStrp;  \/**< TX VLAN stripping indication *\/$/;"	m	struct:XXgEthernet_Config
TxVlanTag	xxgbeth0/xxgethernet.h	/^	u8 TxVlanTag;   \/**< TX VLAN tagging indication *\/$/;"	m	struct:XXgEthernet_Config
TxVlanTag	xxgbeth1/xxgethernet.h	/^	u8 TxVlanTag;   \/**< TX VLAN tagging indication *\/$/;"	m	struct:XXgEthernet_Config
TxVlanTran	xxgbeth0/xxgethernet.h	/^	u8 TxVlanTran;  \/**< TX VLAN Translation indication *\/$/;"	m	struct:XXgEthernet_Config
TxVlanTran	xxgbeth1/xxgethernet.h	/^	u8 TxVlanTran;  \/**< TX VLAN Translation indication *\/$/;"	m	struct:XXgEthernet_Config
Type	xdma/xdma.h	/^			u32 Type;               \/**< Type of DMA engine - C2S or S2C *\/$/;"	m	struct:__anon24
Type	xdma/xdma.h	/^    u32 Type;               \/**< Type of DMA engine - C2S or S2C *\/$/;"	m	struct:__anon25
UNINITIALIZED	include/xdma_user.h	225;"	d
UNINITIALIZED	xrawdata0/sguser.c	94;"	d	file:
UNINITIALIZED	xrawdata1/sguser.c	94;"	d	file:
UNINITIALIZED	xxgbeth0/xgadapter.c	218;"	d	file:
UNINITIALIZED	xxgbeth1/xgadapter.c	218;"	d	file:
UNKNOWN_DUPLEX	xxgbeth0/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	e	enum:DUPLEX	file:
UNKNOWN_DUPLEX	xxgbeth1/xgadapter.c	/^typedef enum DUPLEX { UNKNOWN_DUPLEX, HALF_DUPLEX, FULL_DUPLEX } DUPLEX;$/;"	e	enum:DUPLEX	file:
UNREGISTERED	xrawdata0/sguser.c	96;"	d	file:
UNREGISTERED	xrawdata1/sguser.c	96;"	d	file:
UNREGISTERING	include/xdma_user.h	228;"	d
UNREGISTERING	xxgbeth0/xgadapter.c	227;"	d	file:
UNREGISTERING	xxgbeth0/xgadapter.c	228;"	d	file:
UNREGISTERING	xxgbeth1/xgadapter.c	227;"	d	file:
UNREGISTERING	xxgbeth1/xgadapter.c	228;"	d	file:
UPSTR_MEMWR_BC	xdma/xdma_base.c	165;"	d	file:
USER_ASSIGNED	include/xdma_user.h	227;"	d
Upper	include/xbasic_types.h	/^  Xuint32 Upper;$/;"	m	struct:__anon5
UserGetPkt	include/xdma_user.h	/^		int (* UserGetPkt)(void * handle, PktBuf * vaddr, unsigned int size, int numpkts, u64 privdata);$/;"	m	struct:__anon3
UserGetPkt	include/xdma_user.h	/^		int (* UserGetPkt)(void * handle, PktBuf * vaddr, unsigned int size, int numpkts, unsigned int privdata);$/;"	m	struct:__anon4
UserGetState	include/xdma_user.h	/^		int (* UserGetState)(void * handle, UserState * ustate, u64 privdata);$/;"	m	struct:__anon3
UserGetState	include/xdma_user.h	/^		int (* UserGetState)(void * handle, UserState * ustate, unsigned int privdata);$/;"	m	struct:__anon4
UserInit	include/xdma_user.h	/^		int (* UserInit)(u64 barbase, u64);$/;"	m	struct:__anon3
UserInit	include/xdma_user.h	/^		int (* UserInit)(unsigned int barbase, unsigned int privdata);$/;"	m	struct:__anon4
UserIntr	include/xdma_user.h	/^		int (* UserIntr)(void * handle, u64 privdata);$/;"	m	struct:__anon3
UserIntr	include/xdma_user.h	/^		int (* UserIntr)(void * handle, unsigned int privdata);$/;"	m	struct:__anon4
UserOpen	xdma/xdma_base.c	/^int UserOpen=0;$/;"	v
UserPtrs	include/xdma_user.h	/^	} UserPtrs;$/;"	t	typeref:struct:__anon3
UserPtrs	include/xdma_user.h	/^	} UserPtrs;$/;"	t	typeref:struct:__anon4
UserPutPkt	include/xdma_user.h	/^		int (* UserPutPkt)(void * handle, PktBuf * vaddr, int numpkts, u64 privdata);$/;"	m	struct:__anon3
UserPutPkt	include/xdma_user.h	/^		int (* UserPutPkt)(void * handle, PktBuf * vaddr, int numpkts, unsigned int privdata);$/;"	m	struct:__anon4
UserRemove	include/xdma_user.h	/^		int (* UserRemove)(void * handle, u64 privdata);$/;"	m	struct:__anon3
UserRemove	include/xdma_user.h	/^		int (* UserRemove)(void * handle, unsigned int privdata);$/;"	m	struct:__anon4
UserResume	include/xdma_user.h	/^		int (* UserResume)(void * handle, UserState * ustate, u64 privdata);$/;"	m	struct:__anon3
UserResume	include/xdma_user.h	/^    int (* UserResume)(void * handle, UserState * ustate, unsigned int privdata);$/;"	m	struct:__anon4
UserSetState	include/xdma_user.h	/^		int (* UserSetState)(void * handle, UserState * ustate, u64 privdata);$/;"	m	struct:__anon3
UserSetState	include/xdma_user.h	/^		int (* UserSetState)(void * handle, UserState * ustate, unsigned int privdata);$/;"	m	struct:__anon4
UserState	include/xdma_user.h	/^} UserState;$/;"	t	typeref:struct:__anon2
UserSuspend_Early	include/xdma_user.h	/^		int (* UserSuspend_Early)(void * handle, UserState * ustate, u64 privdata);$/;"	m	struct:__anon3
UserSuspend_Early	include/xdma_user.h	/^    int (* UserSuspend_Early)(void * handle, UserState * ustate, unsigned int privdata);$/;"	m	struct:__anon4
UserSuspend_Late	include/xdma_user.h	/^		int (* UserSuspend_Late)(void * handle, UserState * ustate, u64 privdata);$/;"	m	struct:__anon3
UserSuspend_Late	include/xdma_user.h	/^    int (* UserSuspend_Late)(void * handle, UserState * ustate, unsigned int privdata);$/;"	m	struct:__anon4
VendorId	include/xpmon_be.h	/^    unsigned int VendorId;      \/**< Vendor ID *\/$/;"	m	struct:__anon6
Version	include/xpmon_be.h	/^    unsigned int Version;       \/**< Hardware design version info *\/$/;"	m	struct:__anon6
WRBURST_0	xrawdata0/sguser.c	126;"	d	file:
WRBURST_0	xrawdata1/sguser.c	126;"	d	file:
WRBURST_1	xrawdata0/sguser.c	127;"	d	file:
WRBURST_1	xrawdata1/sguser.c	127;"	d	file:
WRBURST_2	xrawdata0/sguser.c	128;"	d	file:
WRBURST_2	xrawdata1/sguser.c	128;"	d	file:
WRBURST_3	xrawdata0/sguser.c	129;"	d	file:
WRBURST_3	xrawdata1/sguser.c	129;"	d	file:
WRITE_TO_CARD	xrawdata0/sguser.c	893;"	d	file:
WRITE_TO_CARD	xrawdata1/sguser.c	891;"	d	file:
XAE_HDR_VLAN_SIZE	xxgbeth0/xxgethernet.h	463;"	d
XAE_HDR_VLAN_SIZE	xxgbeth1/xxgethernet.h	463;"	d
XAE_MAX_VLAN_FRAME_SIZE	xxgbeth0/xxgethernet.h	470;"	d
XAE_MAX_VLAN_FRAME_SIZE	xxgbeth1/xxgethernet.h	470;"	d
XASSERT_NONE	include/xbasic_types.h	114;"	d
XASSERT_NONVOID	include/xbasic_types.h	249;"	d
XASSERT_NONVOID	include/xbasic_types.h	309;"	d
XASSERT_NONVOID_ALWAYS	include/xbasic_types.h	293;"	d
XASSERT_NONVOID_ALWAYS	include/xbasic_types.h	310;"	d
XASSERT_OCCURRED	include/xbasic_types.h	115;"	d
XASSERT_VOID	include/xbasic_types.h	220;"	d
XASSERT_VOID	include/xbasic_types.h	307;"	d
XASSERT_VOID_ALWAYS	include/xbasic_types.h	275;"	d
XASSERT_VOID_ALWAYS	include/xbasic_types.h	308;"	d
XAssert	xxgbeth0/xbasic_types.c	/^void XAssert(char *File, int Line)$/;"	f
XAssert	xxgbeth1/xbasic_types.c	/^void XAssert(char *File, int Line)$/;"	f
XAssertCallback	include/xbasic_types.h	/^typedef void (*XAssertCallback) (char *FilenamePtr, int LineNumber);$/;"	t
XAssertCallbackRoutine	xxgbeth0/xbasic_types.c	/^static XAssertCallback XAssertCallbackRoutine = (XAssertCallback) NULL;$/;"	v	file:
XAssertCallbackRoutine	xxgbeth1/xbasic_types.c	/^static XAssertCallback XAssertCallbackRoutine = (XAssertCallback) NULL;$/;"	v	file:
XAssertSetCallback	xxgbeth0/xbasic_types.c	/^void XAssertSetCallback(XAssertCallback Routine)$/;"	f
XAssertSetCallback	xxgbeth1/xbasic_types.c	/^void XAssertSetCallback(XAssertCallback Routine)$/;"	f
XAssertStatus	xxgbeth0/xbasic_types.c	/^unsigned int XAssertStatus;$/;"	v
XAssertStatus	xxgbeth1/xbasic_types.c	/^unsigned int XAssertStatus;$/;"	v
XBASIC_TYPES_H	include/xbasic_types.h	74;"	d
XCOMPONENT_IS_READY	include/xbasic_types.h	102;"	d
XCOMPONENT_IS_STARTED	include/xbasic_types.h	103;"	d
XDBG_DEBUG_ALL	include/xdebug.h	93;"	d
XDBG_DEBUG_ERROR	include/xdebug.h	91;"	d
XDBG_DEBUG_FIFO_ALL	include/xdebug.h	98;"	d
XDBG_DEBUG_FIFO_REG	include/xdebug.h	95;"	d
XDBG_DEBUG_FIFO_RX	include/xdebug.h	96;"	d
XDBG_DEBUG_FIFO_TX	include/xdebug.h	97;"	d
XDBG_DEBUG_GENERAL	include/xdebug.h	92;"	d
XDBG_DEBUG_TEMAC_ADPT_ALL	include/xdebug.h	109;"	d
XDBG_DEBUG_TEMAC_ADPT_IOCTL	include/xdebug.h	107;"	d
XDBG_DEBUG_TEMAC_ADPT_MISC	include/xdebug.h	108;"	d
XDBG_DEBUG_TEMAC_ADPT_RX	include/xdebug.h	105;"	d
XDBG_DEBUG_TEMAC_ADPT_TX	include/xdebug.h	106;"	d
XDBG_DEBUG_TEMAC_ALL	include/xdebug.h	103;"	d
XDBG_DEBUG_TEMAC_REG	include/xdebug.h	100;"	d
XDBG_DEBUG_TEMAC_RX	include/xdebug.h	101;"	d
XDBG_DEBUG_TEMAC_TX	include/xdebug.h	102;"	d
XDEBUG	include/xdebug.h	81;"	d
XDEBUG_WARNING	include/xdebug.h	87;"	d
XDMA_BD_H	xdma/xdma_bd.h	96;"	d
XDMA_H	xdma/xdma.h	414;"	d
XDMA_HW_H	xdma/xdma_hw.h	73;"	d
XDMA_PATH	include.mk	/^export XDMA_PATH=$(ROOTDIR)\/xdma$/;"	m
XDMA_USER_H	include/xdma_user.h	203;"	d
XENET_STATS_LEN	xxgbeth0/xgadapter.c	428;"	d	file:
XENET_STATS_LEN	xxgbeth1/xgadapter.c	428;"	d	file:
XETHERNET0_DRIVER_NAME	include.mk	/^export XETHERNET0_DRIVER_NAME=xxgbeth0.ko$/;"	m
XETHERNET0_PATH	include.mk	/^export XETHERNET0_PATH=$(ROOTDIR)\/xxgbeth0$/;"	m
XETHERNET1_DRIVER_NAME	include.mk	/^export XETHERNET1_DRIVER_NAME=xxgbeth1.ko$/;"	m
XETHERNET1_PATH	include.mk	/^export XETHERNET1_PATH=$(ROOTDIR)\/xxgbeth1$/;"	m
XExceptionHandler	include/xbasic_types.h	/^typedef void (*XExceptionHandler) (void *InstancePtr);$/;"	t
XFALSE	include/xbasic_types.h	100;"	d
XIL_COMPONENT_IS_READY	include/xbasic_types.h	105;"	d
XIL_COMPONENT_IS_STARTED	include/xbasic_types.h	106;"	d
XIO_H	include/xio.h	69;"	d
XInterruptHandler	include/xbasic_types.h	/^typedef void (*XInterruptHandler) (void *InstancePtr);$/;"	t
XIo_Address	include/xio.h	/^typedef Xuint32 XIo_Address;$/;"	t
XIo_EndianNoop	include/xio.h	114;"	d
XIo_EndianSwap16	include/xio.h	118;"	d
XIo_EndianSwap16	include/xio.h	129;"	d
XIo_EndianSwap32	include/xio.h	123;"	d
XIo_EndianSwap32	include/xio.h	137;"	d
XIo_FromBigEndian16	include/xio.h	159;"	d
XIo_FromBigEndian16	include/xio.h	172;"	d
XIo_FromBigEndian32	include/xio.h	160;"	d
XIo_FromBigEndian32	include/xio.h	173;"	d
XIo_FromLittleEndian16	include/xio.h	154;"	d
XIo_FromLittleEndian16	include/xio.h	167;"	d
XIo_FromLittleEndian32	include/xio.h	155;"	d
XIo_FromLittleEndian32	include/xio.h	168;"	d
XIo_In16	include/xio.h	241;"	d
XIo_In32	include/xio.h	211;"	d
XIo_In32	include/xio.h	230;"	d
XIo_In32	include/xio.h	242;"	d
XIo_In8	include/xio.h	240;"	d
XIo_Out16	include/xio.h	246;"	d
XIo_Out32	include/xio.h	212;"	d
XIo_Out32	include/xio.h	231;"	d
XIo_Out32	include/xio.h	248;"	d
XIo_Out8	include/xio.h	244;"	d
XIo_ToBigEndian16	include/xio.h	157;"	d
XIo_ToBigEndian16	include/xio.h	170;"	d
XIo_ToBigEndian32	include/xio.h	158;"	d
XIo_ToBigEndian32	include/xio.h	171;"	d
XIo_ToLittleEndian16	include/xio.h	152;"	d
XIo_ToLittleEndian16	include/xio.h	165;"	d
XIo_ToLittleEndian32	include/xio.h	153;"	d
XIo_ToLittleEndian32	include/xio.h	166;"	d
XNULL	include/xbasic_types.h	98;"	d
XNullHandler	xxgbeth0/xbasic_types.c	/^void XNullHandler(void *NullParameter)$/;"	f
XNullHandler	xxgbeth1/xbasic_types.c	/^void XNullHandler(void *NullParameter)$/;"	f
XPAR_AXI_DMA	xxgbeth0/xgadapter.h	72;"	d
XPAR_AXI_DMA	xxgbeth1/xgadapter.h	72;"	d
XPAR_LL_DMA	xxgbeth0/xgadapter.h	71;"	d
XPAR_LL_DMA	xxgbeth1/xgadapter.h	71;"	d
XPAR_LL_FIFO	xxgbeth0/xgadapter.h	73;"	d
XPAR_LL_FIFO	xxgbeth1/xgadapter.h	73;"	d
XPMON_BE_H	include/xpmon_be.h	126;"	d
XPMON_MAGIC	include/xpmon_be.h	152;"	d
XPMON_MAX_CMD	include/xpmon_be.h	155;"	d
XPMON_MAX_CMD	include/xpmon_be.h	157;"	d
XPS__LL_MAC_H	xxgbeth0/xxgethernet_hw.h	75;"	d
XPS__LL_MAC_H	xxgbeth1/xxgethernet_hw.h	75;"	d
XRAWDATA0_PATH	include.mk	/^export XRAWDATA0_PATH=$(ROOTDIR)\/xrawdata0$/;"	m
XRAWDATA1_PATH	include.mk	/^export XRAWDATA1_PATH=$(ROOTDIR)\/xrawdata1$/;"	m
XSTATUS_H	include/xstatus.h	71;"	d
XST_DEVICE_IS_STARTED	include/xstatus.h	87;"	d
XST_DEVICE_IS_STOPPED	include/xstatus.h	88;"	d
XST_DMA_SG_IS_STARTED	include/xstatus.h	96;"	d
XST_DMA_SG_IS_STOPPED	include/xstatus.h	97;"	d
XST_DMA_SG_LIST_EMPTY	include/xstatus.h	95;"	d
XST_DMA_SG_LIST_ERROR	include/xstatus.h	100;"	d
XST_DMA_SG_LIST_FULL	include/xstatus.h	98;"	d
XST_DMA_SG_NO_LIST	include/xstatus.h	99;"	d
XST_FAILURE	include/xstatus.h	86;"	d
XST_INVALID_PARAM	include/xstatus.h	89;"	d
XST_IS_STARTED	include/xstatus.h	90;"	d
XST_IS_STOPPED	include/xstatus.h	91;"	d
XST_SUCCESS	include/xstatus.h	85;"	d
XTEST_FAILED	include/xbasic_types.h	112;"	d
XTEST_PASSED	include/xbasic_types.h	111;"	d
XTE_spinlock	xxgbeth0/xgadapter.c	/^spinlock_t XTE_spinlock;$/;"	v
XTE_spinlock	xxgbeth1/xgadapter.c	/^spinlock_t XTE_spinlock;$/;"	v
XTRUE	include/xbasic_types.h	99;"	d
XUINT64_LSW	include/xbasic_types.h	200;"	d
XUINT64_MSW	include/xbasic_types.h	187;"	d
XWaitInAssert	xxgbeth0/xbasic_types.c	/^int XWaitInAssert = TRUE;$/;"	v
XWaitInAssert	xxgbeth1/xbasic_types.c	/^int XWaitInAssert = TRUE;$/;"	v
XXGETHERNET_H	xxgbeth0/xxgethernet.h	353;"	d
XXGETHERNET_H	xxgbeth1/xxgethernet.h	353;"	d
XXGETHERNET_HW_H	xxgbeth0/xxgethernet_hw.h	71;"	d
XXGETHERNET_HW_H	xxgbeth1/xxgethernet_hw.h	71;"	d
XXGE_AFC_OFFSET	xxgbeth0/xxgethernet_hw.h	340;"	d
XXGE_AFC_OFFSET	xxgbeth0/xxgethernet_hw.h	346;"	d
XXGE_AFC_OFFSET	xxgbeth1/xxgethernet_hw.h	340;"	d
XXGE_AFC_OFFSET	xxgbeth1/xxgethernet_hw.h	346;"	d
XXGE_AFC_PM_MASK	xxgbeth0/xxgethernet_hw.h	361;"	d
XXGE_AFC_PM_MASK	xxgbeth1/xxgethernet_hw.h	361;"	d
XXGE_AUTOSTRIPPING	xxgbeth0/xgadapter.c	239;"	d	file:
XXGE_AUTOSTRIPPING	xxgbeth1/xgadapter.c	239;"	d	file:
XXGE_BROADCAST_OPTION	xxgbeth0/xxgethernet.h	433;"	d
XXGE_BROADCAST_OPTION	xxgbeth1/xxgethernet.h	433;"	d
XXGE_CAP_LC100M_MASK	xxgbeth0/xxgethernet_hw.h	460;"	d
XXGE_CAP_LC100M_MASK	xxgbeth1/xxgethernet_hw.h	460;"	d
XXGE_CAP_LC10G_MASK	xxgbeth0/xxgethernet_hw.h	458;"	d
XXGE_CAP_LC10G_MASK	xxgbeth1/xxgethernet_hw.h	458;"	d
XXGE_CAP_LC10M_MASK	xxgbeth0/xxgethernet_hw.h	461;"	d
XXGE_CAP_LC10M_MASK	xxgbeth1/xxgethernet_hw.h	461;"	d
XXGE_CAP_LC1G_MASK	xxgbeth0/xxgethernet_hw.h	459;"	d
XXGE_CAP_LC1G_MASK	xxgbeth1/xxgethernet_hw.h	459;"	d
XXGE_CAP_OFFSET	xxgbeth0/xxgethernet_hw.h	324;"	d
XXGE_CAP_OFFSET	xxgbeth1/xxgethernet_hw.h	324;"	d
XXGE_CAP_STAT_MASK	xxgbeth0/xxgethernet_hw.h	457;"	d
XXGE_CAP_STAT_MASK	xxgbeth1/xxgethernet_hw.h	457;"	d
XXGE_DEFAULT_OPTIONS	xxgbeth0/xxgethernet.h	436;"	d
XXGE_DEFAULT_OPTIONS	xxgbeth1/xxgethernet.h	436;"	d
XXGE_FCC_FCRX_MASK	xxgbeth0/xxgethernet_hw.h	418;"	d
XXGE_FCC_FCRX_MASK	xxgbeth1/xxgethernet_hw.h	418;"	d
XXGE_FCC_FCTX_MASK	xxgbeth0/xxgethernet_hw.h	419;"	d
XXGE_FCC_FCTX_MASK	xxgbeth1/xxgethernet_hw.h	419;"	d
XXGE_FCC_OFFSET	xxgbeth0/xxgethernet_hw.h	317;"	d
XXGE_FCC_OFFSET	xxgbeth1/xxgethernet_hw.h	317;"	d
XXGE_FCS_INSERT_OPTION	xxgbeth0/xxgethernet.h	407;"	d
XXGE_FCS_INSERT_OPTION	xxgbeth1/xxgethernet.h	407;"	d
XXGE_FCS_STRIP_OPTION	xxgbeth0/xxgethernet.h	401;"	d
XXGE_FCS_STRIP_OPTION	xxgbeth1/xxgethernet.h	401;"	d
XXGE_FLOW_CONTROL_OPTION	xxgbeth0/xxgethernet.h	395;"	d
XXGE_FLOW_CONTROL_OPTION	xxgbeth1/xxgethernet.h	395;"	d
XXGE_GERS_OFFSET	xxgbeth0/xxgethernet_hw.h	319;"	d
XXGE_GERS_OFFSET	xxgbeth1/xxgethernet_hw.h	319;"	d
XXGE_HDR_SIZE	xxgbeth0/xxgethernet.h	462;"	d
XXGE_HDR_SIZE	xxgbeth1/xxgethernet.h	462;"	d
XXGE_JUMBO_MTU	xxgbeth0/xxgethernet.h	459;"	d
XXGE_JUMBO_MTU	xxgbeth1/xxgethernet.h	459;"	d
XXGE_JUMBO_OPTION	xxgbeth0/xxgethernet.h	388;"	d
XXGE_JUMBO_OPTION	xxgbeth1/xxgethernet.h	388;"	d
XXGE_LENTYPE_ERR_OPTION	xxgbeth0/xxgethernet.h	414;"	d
XXGE_LENTYPE_ERR_OPTION	xxgbeth1/xxgethernet.h	414;"	d
XXGE_LOOPS_TO_COME_OUT_OF_RST	xxgbeth0/xxgethernet_hw.h	514;"	d
XXGE_LOOPS_TO_COME_OUT_OF_RST	xxgbeth1/xxgethernet_hw.h	514;"	d
XXGE_MACL_OFFSET	xxgbeth0/xxgethernet_hw.h	341;"	d
XXGE_MACL_OFFSET	xxgbeth0/xxgethernet_hw.h	347;"	d
XXGE_MACL_OFFSET	xxgbeth1/xxgethernet_hw.h	341;"	d
XXGE_MACL_OFFSET	xxgbeth1/xxgethernet_hw.h	347;"	d
XXGE_MACU_OFFSET	xxgbeth0/xxgethernet_hw.h	342;"	d
XXGE_MACU_OFFSET	xxgbeth0/xxgethernet_hw.h	348;"	d
XXGE_MACU_OFFSET	xxgbeth1/xxgethernet_hw.h	342;"	d
XXGE_MACU_OFFSET	xxgbeth1/xxgethernet_hw.h	348;"	d
XXGE_MAC_ADDR_SIZE	xxgbeth0/xxgethernet.h	455;"	d
XXGE_MAC_ADDR_SIZE	xxgbeth1/xxgethernet.h	455;"	d
XXGE_MAX_FRAME_SIZE	xxgbeth0/xxgethernet.h	469;"	d
XXGE_MAX_FRAME_SIZE	xxgbeth1/xxgethernet.h	469;"	d
XXGE_MAX_JUMBO_FRAME_SIZE	xxgbeth0/xxgethernet.h	471;"	d
XXGE_MAX_JUMBO_FRAME_SIZE	xxgbeth1/xxgethernet.h	471;"	d
XXGE_MDIO_CFG0_CLOCK_DIVIDE_MAX	xxgbeth0/xxgethernet_hw.h	468;"	d
XXGE_MDIO_CFG0_CLOCK_DIVIDE_MAX	xxgbeth1/xxgethernet_hw.h	468;"	d
XXGE_MDIO_CFG0_MDIOEN_MASK	xxgbeth0/xxgethernet_hw.h	467;"	d
XXGE_MDIO_CFG0_MDIOEN_MASK	xxgbeth1/xxgethernet_hw.h	467;"	d
XXGE_MDIO_CFG0_OFFSET	xxgbeth0/xxgethernet_hw.h	328;"	d
XXGE_MDIO_CFG0_OFFSET	xxgbeth1/xxgethernet_hw.h	328;"	d
XXGE_MDIO_CFG1_INITIATE_MASK	xxgbeth0/xxgethernet_hw.h	475;"	d
XXGE_MDIO_CFG1_INITIATE_MASK	xxgbeth1/xxgethernet_hw.h	475;"	d
XXGE_MDIO_CFG1_OFFSET	xxgbeth0/xxgethernet_hw.h	329;"	d
XXGE_MDIO_CFG1_OFFSET	xxgbeth1/xxgethernet_hw.h	329;"	d
XXGE_MDIO_CFG1_OP_READ_MASK	xxgbeth0/xxgethernet_hw.h	478;"	d
XXGE_MDIO_CFG1_OP_READ_MASK	xxgbeth1/xxgethernet_hw.h	478;"	d
XXGE_MDIO_CFG1_OP_SETADDR_MASK	xxgbeth0/xxgethernet_hw.h	477;"	d
XXGE_MDIO_CFG1_OP_SETADDR_MASK	xxgbeth1/xxgethernet_hw.h	477;"	d
XXGE_MDIO_CFG1_OP_WRITE_MASK	xxgbeth0/xxgethernet_hw.h	479;"	d
XXGE_MDIO_CFG1_OP_WRITE_MASK	xxgbeth1/xxgethernet_hw.h	479;"	d
XXGE_MDIO_CFG1_READY_MASK	xxgbeth0/xxgethernet_hw.h	476;"	d
XXGE_MDIO_CFG1_READY_MASK	xxgbeth1/xxgethernet_hw.h	476;"	d
XXGE_MDIO_DIV_DFT	xxgbeth0/xxgethernet.h	449;"	d
XXGE_MDIO_DIV_DFT	xxgbeth1/xxgethernet.h	449;"	d
XXGE_MDIO_MC_CLOCK_DEVAD_MAX	xxgbeth0/xxgethernet_hw.h	473;"	d
XXGE_MDIO_MC_CLOCK_DEVAD_MAX	xxgbeth1/xxgethernet_hw.h	473;"	d
XXGE_MDIO_MC_MDIOPRTAD_MASK	xxgbeth0/xxgethernet_hw.h	472;"	d
XXGE_MDIO_MC_MDIOPRTAD_MASK	xxgbeth1/xxgethernet_hw.h	472;"	d
XXGE_MDIO_MC_MDIO_TXOP_MASK	xxgbeth0/xxgethernet_hw.h	474;"	d
XXGE_MDIO_MC_MDIO_TXOP_MASK	xxgbeth1/xxgethernet_hw.h	474;"	d
XXGE_MDIO_PHY_LINK_UP_MASK	xxgbeth0/xxgethernet_hw.h	469;"	d
XXGE_MDIO_PHY_LINK_UP_MASK	xxgbeth1/xxgethernet_hw.h	469;"	d
XXGE_MDIO_REGISTER_ADDRESS	xxgbeth0/xxgethernet_hw.h	327;"	d
XXGE_MDIO_REGISTER_ADDRESS	xxgbeth1/xxgethernet_hw.h	327;"	d
XXGE_MDIO_RX_DATA_MASK	xxgbeth0/xxgethernet_hw.h	491;"	d
XXGE_MDIO_RX_DATA_MASK	xxgbeth1/xxgethernet_hw.h	491;"	d
XXGE_MDIO_RX_DATA_OFFSET	xxgbeth0/xxgethernet_hw.h	331;"	d
XXGE_MDIO_RX_DATA_OFFSET	xxgbeth1/xxgethernet_hw.h	331;"	d
XXGE_MDIO_TX_DATA_MASK	xxgbeth0/xxgethernet_hw.h	486;"	d
XXGE_MDIO_TX_DATA_MASK	xxgbeth1/xxgethernet_hw.h	486;"	d
XXGE_MDIO_TX_DATA_OFFSET	xxgbeth0/xxgethernet_hw.h	330;"	d
XXGE_MDIO_TX_DATA_OFFSET	xxgbeth1/xxgethernet_hw.h	330;"	d
XXGE_MTU	xxgbeth0/xxgethernet.h	456;"	d
XXGE_MTU	xxgbeth1/xxgethernet.h	456;"	d
XXGE_PHY_ADDRESS	xxgbeth0/xxgethernet.h	479;"	d
XXGE_PHY_ADDRESS	xxgbeth1/xxgethernet.h	479;"	d
XXGE_PHY_ADDR_LIMIT	xxgbeth0/xxgethernet_hw.h	507;"	d
XXGE_PHY_ADDR_LIMIT	xxgbeth1/xxgethernet_hw.h	507;"	d
XXGE_PHY_DEVAD	xxgbeth0/xxgethernet.h	478;"	d
XXGE_PHY_DEVAD	xxgbeth1/xxgethernet.h	478;"	d
XXGE_PHY_PRTAD	xxgbeth0/xxgethernet.h	474;"	d
XXGE_PHY_PRTAD	xxgbeth0/xxgethernet.h	476;"	d
XXGE_PHY_PRTAD	xxgbeth1/xxgethernet.h	474;"	d
XXGE_PHY_PRTAD	xxgbeth1/xxgethernet.h	476;"	d
XXGE_PHY_REG_NUM_LIMIT	xxgbeth0/xxgethernet_hw.h	511;"	d
XXGE_PHY_REG_NUM_LIMIT	xxgbeth1/xxgethernet_hw.h	511;"	d
XXGE_PROMISC_OPTION	xxgbeth0/xxgethernet.h	382;"	d
XXGE_PROMISC_OPTION	xxgbeth1/xxgethernet.h	382;"	d
XXGE_RCW0_OFFSET	xrawdata0/sguser.c	147;"	d	file:
XXGE_RCW0_OFFSET	xrawdata1/sguser.c	147;"	d	file:
XXGE_RCW0_OFFSET	xxgbeth0/xxgethernet_hw.h	314;"	d
XXGE_RCW0_OFFSET	xxgbeth1/xxgethernet_hw.h	314;"	d
XXGE_RCW1_CL_DIS_MASK	xxgbeth0/xxgethernet_hw.h	384;"	d
XXGE_RCW1_CL_DIS_MASK	xxgbeth1/xxgethernet_hw.h	384;"	d
XXGE_RCW1_FCS_MASK	xxgbeth0/xxgethernet_hw.h	376;"	d
XXGE_RCW1_FCS_MASK	xxgbeth1/xxgethernet_hw.h	376;"	d
XXGE_RCW1_HD_MASK	xxgbeth0/xxgethernet_hw.h	380;"	d
XXGE_RCW1_HD_MASK	xxgbeth1/xxgethernet_hw.h	380;"	d
XXGE_RCW1_JUM_MASK	xxgbeth0/xxgethernet_hw.h	375;"	d
XXGE_RCW1_JUM_MASK	xxgbeth1/xxgethernet_hw.h	375;"	d
XXGE_RCW1_LT_DIS_MASK	xxgbeth0/xxgethernet_hw.h	381;"	d
XXGE_RCW1_LT_DIS_MASK	xxgbeth1/xxgethernet_hw.h	381;"	d
XXGE_RCW1_OFFSET	xrawdata0/sguser.c	148;"	d	file:
XXGE_RCW1_OFFSET	xrawdata1/sguser.c	148;"	d	file:
XXGE_RCW1_OFFSET	xxgbeth0/xxgethernet_hw.h	315;"	d
XXGE_RCW1_OFFSET	xxgbeth1/xxgethernet_hw.h	315;"	d
XXGE_RCW1_PAUSEADDR_MASK	xxgbeth0/xxgethernet_hw.h	387;"	d
XXGE_RCW1_PAUSEADDR_MASK	xxgbeth1/xxgethernet_hw.h	387;"	d
XXGE_RCW1_RST_MASK	xxgbeth0/xxgethernet_hw.h	374;"	d
XXGE_RCW1_RST_MASK	xxgbeth1/xxgethernet_hw.h	374;"	d
XXGE_RCW1_RX_MASK	xxgbeth0/xxgethernet_hw.h	378;"	d
XXGE_RCW1_RX_MASK	xxgbeth1/xxgethernet_hw.h	378;"	d
XXGE_RCW1_VLAN_MASK	xxgbeth0/xxgethernet_hw.h	379;"	d
XXGE_RCW1_VLAN_MASK	xxgbeth1/xxgethernet_hw.h	379;"	d
XXGE_RECEIVER_ENABLE_OPTION	xxgbeth0/xxgethernet.h	426;"	d
XXGE_RECEIVER_ENABLE_OPTION	xxgbeth1/xxgethernet.h	426;"	d
XXGE_RMTU_FI_MASK	xxgbeth0/xxgethernet_hw.h	435;"	d
XXGE_RMTU_FI_MASK	xxgbeth1/xxgethernet_hw.h	435;"	d
XXGE_RMTU_LFR_MASK	xxgbeth0/xxgethernet_hw.h	436;"	d
XXGE_RMTU_LFR_MASK	xxgbeth1/xxgethernet_hw.h	436;"	d
XXGE_RMTU_OFFSET	xxgbeth0/xxgethernet_hw.h	321;"	d
XXGE_RMTU_OFFSET	xxgbeth1/xxgethernet_hw.h	321;"	d
XXGE_RSC_FI_MASK	xxgbeth0/xxgethernet_hw.h	425;"	d
XXGE_RSC_FI_MASK	xxgbeth1/xxgethernet_hw.h	425;"	d
XXGE_RSC_GPCS_MASK	xxgbeth0/xxgethernet_hw.h	428;"	d
XXGE_RSC_GPCS_MASK	xxgbeth1/xxgethernet_hw.h	428;"	d
XXGE_RSC_HOST_MASK	xxgbeth0/xxgethernet_hw.h	429;"	d
XXGE_RSC_HOST_MASK	xxgbeth1/xxgethernet_hw.h	429;"	d
XXGE_RSC_LFR_MASK	xxgbeth0/xxgethernet_hw.h	426;"	d
XXGE_RSC_LFR_MASK	xxgbeth1/xxgethernet_hw.h	426;"	d
XXGE_RSC_SGMII_MASK	xxgbeth0/xxgethernet_hw.h	427;"	d
XXGE_RSC_SGMII_MASK	xxgbeth1/xxgethernet_hw.h	427;"	d
XXGE_RST_DELAY_LOOPCNT_VAL	xxgbeth0/xxgethernet_hw.h	519;"	d
XXGE_RST_DELAY_LOOPCNT_VAL	xxgbeth1/xxgethernet_hw.h	519;"	d
XXGE_RX	xxgbeth0/xxgethernet.h	485;"	d
XXGE_RX	xxgbeth1/xxgethernet.h	485;"	d
XXGE_RX1024BL_OFFSET	xxgbeth0/xxgethernet_hw.h	156;"	d
XXGE_RX1024BL_OFFSET	xxgbeth1/xxgethernet_hw.h	156;"	d
XXGE_RX1024BU_OFFSET	xxgbeth0/xxgethernet_hw.h	159;"	d
XXGE_RX1024BU_OFFSET	xxgbeth1/xxgethernet_hw.h	159;"	d
XXGE_RX128B255L_OFFSET	xxgbeth0/xxgethernet_hw.h	138;"	d
XXGE_RX128B255L_OFFSET	xxgbeth1/xxgethernet_hw.h	138;"	d
XXGE_RX128B255U_OFFSET	xxgbeth0/xxgethernet_hw.h	141;"	d
XXGE_RX128B255U_OFFSET	xxgbeth1/xxgethernet_hw.h	141;"	d
XXGE_RX256B511L_OFFSET	xxgbeth0/xxgethernet_hw.h	144;"	d
XXGE_RX256B511L_OFFSET	xxgbeth1/xxgethernet_hw.h	144;"	d
XXGE_RX256B511U_OFFSET	xxgbeth0/xxgethernet_hw.h	147;"	d
XXGE_RX256B511U_OFFSET	xxgbeth1/xxgethernet_hw.h	147;"	d
XXGE_RX512B1023L_OFFSET	xxgbeth0/xxgethernet_hw.h	150;"	d
XXGE_RX512B1023L_OFFSET	xxgbeth1/xxgethernet_hw.h	150;"	d
XXGE_RX512B1023U_OFFSET	xxgbeth0/xxgethernet_hw.h	153;"	d
XXGE_RX512B1023U_OFFSET	xxgbeth1/xxgethernet_hw.h	153;"	d
XXGE_RX64BL_OFFSET	xxgbeth0/xxgethernet_hw.h	126;"	d
XXGE_RX64BL_OFFSET	xxgbeth1/xxgethernet_hw.h	126;"	d
XXGE_RX64BU_OFFSET	xxgbeth0/xxgethernet_hw.h	129;"	d
XXGE_RX64BU_OFFSET	xxgbeth1/xxgethernet_hw.h	129;"	d
XXGE_RX65B127L_OFFSET	xxgbeth0/xxgethernet_hw.h	132;"	d
XXGE_RX65B127L_OFFSET	xxgbeth1/xxgethernet_hw.h	132;"	d
XXGE_RX65B127U_OFFSET	xxgbeth0/xxgethernet_hw.h	135;"	d
XXGE_RX65B127U_OFFSET	xxgbeth1/xxgethernet_hw.h	135;"	d
XXGE_RXBCSTFL_OFFSET	xxgbeth0/xxgethernet_hw.h	222;"	d
XXGE_RXBCSTFL_OFFSET	xxgbeth1/xxgethernet_hw.h	222;"	d
XXGE_RXBCSTFU_OFFSET	xxgbeth0/xxgethernet_hw.h	225;"	d
XXGE_RXBCSTFU_OFFSET	xxgbeth1/xxgethernet_hw.h	225;"	d
XXGE_RXBL_OFFSET	xxgbeth0/xxgethernet_hw.h	106;"	d
XXGE_RXBL_OFFSET	xxgbeth1/xxgethernet_hw.h	106;"	d
XXGE_RXBU_OFFSET	xxgbeth0/xxgethernet_hw.h	107;"	d
XXGE_RXBU_OFFSET	xxgbeth1/xxgethernet_hw.h	107;"	d
XXGE_RXCTRFL_OFFSET	xxgbeth0/xxgethernet_hw.h	234;"	d
XXGE_RXCTRFL_OFFSET	xxgbeth1/xxgethernet_hw.h	234;"	d
XXGE_RXCTRFU_OFFSET	xxgbeth0/xxgethernet_hw.h	237;"	d
XXGE_RXCTRFU_OFFSET	xxgbeth1/xxgethernet_hw.h	237;"	d
XXGE_RXFCSERL_OFFSET	xxgbeth0/xxgethernet_hw.h	216;"	d
XXGE_RXFCSERL_OFFSET	xxgbeth1/xxgethernet_hw.h	216;"	d
XXGE_RXFCSERU_OFFSET	xxgbeth0/xxgethernet_hw.h	219;"	d
XXGE_RXFCSERU_OFFSET	xxgbeth1/xxgethernet_hw.h	219;"	d
XXGE_RXFL_OFFSET	xxgbeth0/xxgethernet_hw.h	210;"	d
XXGE_RXFL_OFFSET	xxgbeth1/xxgethernet_hw.h	210;"	d
XXGE_RXFRAGL_OFFSET	xxgbeth0/xxgethernet_hw.h	118;"	d
XXGE_RXFRAGL_OFFSET	xxgbeth1/xxgethernet_hw.h	118;"	d
XXGE_RXFRAGU_OFFSET	xxgbeth0/xxgethernet_hw.h	122;"	d
XXGE_RXFRAGU_OFFSET	xxgbeth1/xxgethernet_hw.h	122;"	d
XXGE_RXFU_OFFSET	xxgbeth0/xxgethernet_hw.h	213;"	d
XXGE_RXFU_OFFSET	xxgbeth1/xxgethernet_hw.h	213;"	d
XXGE_RXLTERL_OFFSET	xxgbeth0/xxgethernet_hw.h	240;"	d
XXGE_RXLTERL_OFFSET	xxgbeth1/xxgethernet_hw.h	240;"	d
XXGE_RXLTERU_OFFSET	xxgbeth0/xxgethernet_hw.h	243;"	d
XXGE_RXLTERU_OFFSET	xxgbeth1/xxgethernet_hw.h	243;"	d
XXGE_RXMCSTFL_OFFSET	xxgbeth0/xxgethernet_hw.h	228;"	d
XXGE_RXMCSTFL_OFFSET	xxgbeth1/xxgethernet_hw.h	228;"	d
XXGE_RXMCSTFU_OFFSET	xxgbeth0/xxgethernet_hw.h	231;"	d
XXGE_RXMCSTFU_OFFSET	xxgbeth1/xxgethernet_hw.h	231;"	d
XXGE_RXOVRL_OFFSET	xxgbeth0/xxgethernet_hw.h	162;"	d
XXGE_RXOVRL_OFFSET	xxgbeth1/xxgethernet_hw.h	162;"	d
XXGE_RXOVRU_OFFSET	xxgbeth0/xxgethernet_hw.h	165;"	d
XXGE_RXOVRU_OFFSET	xxgbeth1/xxgethernet_hw.h	165;"	d
XXGE_RXPFL_OFFSET	xxgbeth0/xxgethernet_hw.h	252;"	d
XXGE_RXPFL_OFFSET	xxgbeth1/xxgethernet_hw.h	252;"	d
XXGE_RXPFU_OFFSET	xxgbeth0/xxgethernet_hw.h	255;"	d
XXGE_RXPFU_OFFSET	xxgbeth1/xxgethernet_hw.h	255;"	d
XXGE_RXUNDRL_OFFSET	xxgbeth0/xxgethernet_hw.h	110;"	d
XXGE_RXUNDRL_OFFSET	xxgbeth1/xxgethernet_hw.h	110;"	d
XXGE_RXUNDRU_OFFSET	xxgbeth0/xxgethernet_hw.h	114;"	d
XXGE_RXUNDRU_OFFSET	xxgbeth1/xxgethernet_hw.h	114;"	d
XXGE_RXUOPFL_OFFSET	xxgbeth0/xxgethernet_hw.h	258;"	d
XXGE_RXUOPFL_OFFSET	xxgbeth1/xxgethernet_hw.h	258;"	d
XXGE_RXUOPFU_OFFSET	xxgbeth0/xxgethernet_hw.h	262;"	d
XXGE_RXUOPFU_OFFSET	xxgbeth1/xxgethernet_hw.h	262;"	d
XXGE_RXVLANFL_OFFSET	xxgbeth0/xxgethernet_hw.h	246;"	d
XXGE_RXVLANFL_OFFSET	xxgbeth1/xxgethernet_hw.h	246;"	d
XXGE_RXVLANFU_OFFSET	xxgbeth0/xxgethernet_hw.h	249;"	d
XXGE_RXVLANFU_OFFSET	xxgbeth1/xxgethernet_hw.h	249;"	d
XXGE_SPEED_100_MBPS	xxgbeth0/xxgethernet_hw.h	504;"	d
XXGE_SPEED_100_MBPS	xxgbeth1/xxgethernet_hw.h	504;"	d
XXGE_SPEED_10_GBPS	xxgbeth0/xxgethernet_hw.h	502;"	d
XXGE_SPEED_10_GBPS	xxgbeth1/xxgethernet_hw.h	502;"	d
XXGE_SPEED_10_MBPS	xxgbeth0/xxgethernet_hw.h	505;"	d
XXGE_SPEED_10_MBPS	xxgbeth1/xxgethernet_hw.h	505;"	d
XXGE_SPEED_1_GBPS	xxgbeth0/xxgethernet_hw.h	503;"	d
XXGE_SPEED_1_GBPS	xxgbeth1/xxgethernet_hw.h	503;"	d
XXGE_TC_DIC_MASK	xxgbeth0/xxgethernet_hw.h	411;"	d
XXGE_TC_DIC_MASK	xxgbeth1/xxgethernet_hw.h	411;"	d
XXGE_TC_FCS_MASK	xxgbeth0/xxgethernet_hw.h	400;"	d
XXGE_TC_FCS_MASK	xxgbeth1/xxgethernet_hw.h	400;"	d
XXGE_TC_HD_MASK	xxgbeth0/xxgethernet_hw.h	405;"	d
XXGE_TC_HD_MASK	xxgbeth1/xxgethernet_hw.h	405;"	d
XXGE_TC_IFG_MASK	xxgbeth0/xxgethernet_hw.h	406;"	d
XXGE_TC_IFG_MASK	xxgbeth1/xxgethernet_hw.h	406;"	d
XXGE_TC_JUM_MASK	xxgbeth0/xxgethernet_hw.h	399;"	d
XXGE_TC_JUM_MASK	xxgbeth1/xxgethernet_hw.h	399;"	d
XXGE_TC_OFFSET	xrawdata0/sguser.c	149;"	d	file:
XXGE_TC_OFFSET	xrawdata1/sguser.c	149;"	d	file:
XXGE_TC_OFFSET	xxgbeth0/xxgethernet_hw.h	316;"	d
XXGE_TC_OFFSET	xxgbeth1/xxgethernet_hw.h	316;"	d
XXGE_TC_RST_MASK	xxgbeth0/xxgethernet_hw.h	398;"	d
XXGE_TC_RST_MASK	xxgbeth1/xxgethernet_hw.h	398;"	d
XXGE_TC_TPP_MASK	xxgbeth0/xxgethernet_hw.h	410;"	d
XXGE_TC_TPP_MASK	xxgbeth1/xxgethernet_hw.h	410;"	d
XXGE_TC_TXCONTROLBIT	xxgbeth0/xxgethernet_hw.h	333;"	d
XXGE_TC_TXCONTROLBIT	xxgbeth1/xxgethernet_hw.h	333;"	d
XXGE_TC_TX_MASK	xxgbeth0/xxgethernet_hw.h	403;"	d
XXGE_TC_TX_MASK	xxgbeth1/xxgethernet_hw.h	403;"	d
XXGE_TC_VLAN_MASK	xxgbeth0/xxgethernet_hw.h	404;"	d
XXGE_TC_VLAN_MASK	xxgbeth1/xxgethernet_hw.h	404;"	d
XXGE_TMTU_FI_MASK	xxgbeth0/xxgethernet_hw.h	442;"	d
XXGE_TMTU_FI_MASK	xxgbeth1/xxgethernet_hw.h	442;"	d
XXGE_TMTU_LFR_MASK	xxgbeth0/xxgethernet_hw.h	443;"	d
XXGE_TMTU_LFR_MASK	xxgbeth1/xxgethernet_hw.h	443;"	d
XXGE_TMTU_OFFSET	xxgbeth0/xxgethernet_hw.h	322;"	d
XXGE_TMTU_OFFSET	xxgbeth1/xxgethernet_hw.h	322;"	d
XXGE_TPF_TPFV_MASK	xxgbeth0/xxgethernet_hw.h	368;"	d
XXGE_TPF_TPFV_MASK	xxgbeth1/xxgethernet_hw.h	368;"	d
XXGE_TRANSMITTER_ENABLE_OPTION	xxgbeth0/xxgethernet.h	420;"	d
XXGE_TRANSMITTER_ENABLE_OPTION	xxgbeth1/xxgethernet.h	420;"	d
XXGE_TRL_SIZE	xxgbeth0/xxgethernet.h	466;"	d
XXGE_TRL_SIZE	xxgbeth1/xxgethernet.h	466;"	d
XXGE_TX	xxgbeth0/xxgethernet.h	486;"	d
XXGE_TX	xxgbeth1/xxgethernet.h	486;"	d
XXGE_TX1024L_OFFSET	xxgbeth0/xxgethernet_hw.h	198;"	d
XXGE_TX1024L_OFFSET	xxgbeth1/xxgethernet_hw.h	198;"	d
XXGE_TX1024U_OFFSET	xxgbeth0/xxgethernet_hw.h	201;"	d
XXGE_TX1024U_OFFSET	xxgbeth1/xxgethernet_hw.h	201;"	d
XXGE_TX128B255L_OFFSET	xxgbeth0/xxgethernet_hw.h	180;"	d
XXGE_TX128B255L_OFFSET	xxgbeth1/xxgethernet_hw.h	180;"	d
XXGE_TX128B255U_OFFSET	xxgbeth0/xxgethernet_hw.h	183;"	d
XXGE_TX128B255U_OFFSET	xxgbeth1/xxgethernet_hw.h	183;"	d
XXGE_TX256B511L_OFFSET	xxgbeth0/xxgethernet_hw.h	186;"	d
XXGE_TX256B511L_OFFSET	xxgbeth1/xxgethernet_hw.h	186;"	d
XXGE_TX256B511U_OFFSET	xxgbeth0/xxgethernet_hw.h	189;"	d
XXGE_TX256B511U_OFFSET	xxgbeth1/xxgethernet_hw.h	189;"	d
XXGE_TX512B1023L_OFFSET	xxgbeth0/xxgethernet_hw.h	192;"	d
XXGE_TX512B1023L_OFFSET	xxgbeth1/xxgethernet_hw.h	192;"	d
XXGE_TX512B1023U_OFFSET	xxgbeth0/xxgethernet_hw.h	195;"	d
XXGE_TX512B1023U_OFFSET	xxgbeth1/xxgethernet_hw.h	195;"	d
XXGE_TX64BL_OFFSET	xxgbeth0/xxgethernet_hw.h	168;"	d
XXGE_TX64BL_OFFSET	xxgbeth1/xxgethernet_hw.h	168;"	d
XXGE_TX64BU_OFFSET	xxgbeth0/xxgethernet_hw.h	171;"	d
XXGE_TX64BU_OFFSET	xxgbeth1/xxgethernet_hw.h	171;"	d
XXGE_TX65B127L_OFFSET	xxgbeth0/xxgethernet_hw.h	174;"	d
XXGE_TX65B127L_OFFSET	xxgbeth1/xxgethernet_hw.h	174;"	d
XXGE_TX65B127U_OFFSET	xxgbeth0/xxgethernet_hw.h	177;"	d
XXGE_TX65B127U_OFFSET	xxgbeth1/xxgethernet_hw.h	177;"	d
XXGE_TXBCSTFL_OFFSET	xxgbeth0/xxgethernet_hw.h	272;"	d
XXGE_TXBCSTFL_OFFSET	xxgbeth1/xxgethernet_hw.h	272;"	d
XXGE_TXBCSTFU_OFFSET	xxgbeth0/xxgethernet_hw.h	275;"	d
XXGE_TXBCSTFU_OFFSET	xxgbeth1/xxgethernet_hw.h	275;"	d
XXGE_TXBL_OFFSET	xxgbeth0/xxgethernet_hw.h	108;"	d
XXGE_TXBL_OFFSET	xxgbeth1/xxgethernet_hw.h	108;"	d
XXGE_TXBU_OFFSET	xxgbeth0/xxgethernet_hw.h	109;"	d
XXGE_TXBU_OFFSET	xxgbeth1/xxgethernet_hw.h	109;"	d
XXGE_TXCTRFL_OFFSET	xxgbeth0/xxgethernet_hw.h	290;"	d
XXGE_TXCTRFL_OFFSET	xxgbeth1/xxgethernet_hw.h	290;"	d
XXGE_TXCTRFU_OFFSET	xxgbeth0/xxgethernet_hw.h	294;"	d
XXGE_TXCTRFU_OFFSET	xxgbeth1/xxgethernet_hw.h	294;"	d
XXGE_TXFL_OFFSET	xxgbeth0/xxgethernet_hw.h	266;"	d
XXGE_TXFL_OFFSET	xxgbeth1/xxgethernet_hw.h	266;"	d
XXGE_TXFU_OFFSET	xxgbeth0/xxgethernet_hw.h	269;"	d
XXGE_TXFU_OFFSET	xxgbeth1/xxgethernet_hw.h	269;"	d
XXGE_TXMCSTFL_OFFSET	xxgbeth0/xxgethernet_hw.h	278;"	d
XXGE_TXMCSTFL_OFFSET	xxgbeth1/xxgethernet_hw.h	278;"	d
XXGE_TXMCSTFU_OFFSET	xxgbeth0/xxgethernet_hw.h	281;"	d
XXGE_TXMCSTFU_OFFSET	xxgbeth1/xxgethernet_hw.h	281;"	d
XXGE_TXOVRL_OFFSET	xxgbeth0/xxgethernet_hw.h	204;"	d
XXGE_TXOVRL_OFFSET	xxgbeth1/xxgethernet_hw.h	204;"	d
XXGE_TXOVRU_OFFSET	xxgbeth0/xxgethernet_hw.h	207;"	d
XXGE_TXOVRU_OFFSET	xxgbeth1/xxgethernet_hw.h	207;"	d
XXGE_TXPFL_OFFSET	xxgbeth0/xxgethernet_hw.h	304;"	d
XXGE_TXPFL_OFFSET	xxgbeth1/xxgethernet_hw.h	304;"	d
XXGE_TXPFU_OFFSET	xxgbeth0/xxgethernet_hw.h	307;"	d
XXGE_TXPFU_OFFSET	xxgbeth1/xxgethernet_hw.h	307;"	d
XXGE_TXUNDRERL_OFFSET	xxgbeth0/xxgethernet_hw.h	284;"	d
XXGE_TXUNDRERL_OFFSET	xxgbeth1/xxgethernet_hw.h	284;"	d
XXGE_TXUNDRERU_OFFSET	xxgbeth0/xxgethernet_hw.h	287;"	d
XXGE_TXUNDRERU_OFFSET	xxgbeth1/xxgethernet_hw.h	287;"	d
XXGE_TXVLANFL_OFFSET	xxgbeth0/xxgethernet_hw.h	298;"	d
XXGE_TXVLANFL_OFFSET	xxgbeth1/xxgethernet_hw.h	298;"	d
XXGE_TXVLANFU_OFFSET	xxgbeth0/xxgethernet_hw.h	301;"	d
XXGE_TXVLANFU_OFFSET	xxgbeth1/xxgethernet_hw.h	301;"	d
XXGE_VER_MAJ	xxgbeth0/xxgethernet_hw.h	449;"	d
XXGE_VER_MAJ	xxgbeth1/xxgethernet_hw.h	449;"	d
XXGE_VER_MIN	xxgbeth0/xxgethernet_hw.h	450;"	d
XXGE_VER_MIN	xxgbeth1/xxgethernet_hw.h	450;"	d
XXGE_VER_OFFSET	xxgbeth0/xxgethernet_hw.h	323;"	d
XXGE_VER_OFFSET	xxgbeth1/xxgethernet_hw.h	323;"	d
XXGE_VER_PTCH	xxgbeth0/xxgethernet_hw.h	451;"	d
XXGE_VER_PTCH	xxgbeth1/xxgethernet_hw.h	451;"	d
XXgEthernet	xxgbeth0/xxgethernet.h	/^typedef struct XXgEthernet {		 $/;"	s
XXgEthernet	xxgbeth0/xxgethernet.h	/^} XXgEthernet;$/;"	t	typeref:struct:XXgEthernet
XXgEthernet	xxgbeth1/xxgethernet.h	/^typedef struct XXgEthernet {		 $/;"	s
XXgEthernet	xxgbeth1/xxgethernet.h	/^} XXgEthernet;$/;"	t	typeref:struct:XXgEthernet
XXgEthernet_CfgInitialize	xxgbeth0/xxgethernet.c	/^int XXgEthernet_CfgInitialize(XXgEthernet *InstancePtr,$/;"	f
XXgEthernet_CfgInitialize	xxgbeth1/xxgethernet.c	/^int XXgEthernet_CfgInitialize(XXgEthernet *InstancePtr,$/;"	f
XXgEthernet_ClearOptions	xxgbeth0/xxgethernet.c	/^int XXgEthernet_ClearOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f
XXgEthernet_ClearOptions	xxgbeth1/xxgethernet.c	/^int XXgEthernet_ClearOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f
XXgEthernet_Config	xxgbeth0/xxgethernet.h	/^typedef struct XXgEthernet_Config {$/;"	s
XXgEthernet_Config	xxgbeth0/xxgethernet.h	/^} XXgEthernet_Config;$/;"	t	typeref:struct:XXgEthernet_Config
XXgEthernet_Config	xxgbeth1/xxgethernet.h	/^typedef struct XXgEthernet_Config {$/;"	s
XXgEthernet_Config	xxgbeth1/xxgethernet.h	/^} XXgEthernet_Config;$/;"	t	typeref:struct:XXgEthernet_Config
XXgEthernet_DisableControlFrameLenCheck	xxgbeth0/xxgethernet.c	/^void XXgEthernet_DisableControlFrameLenCheck(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_DisableControlFrameLenCheck	xxgbeth1/xxgethernet.c	/^void XXgEthernet_DisableControlFrameLenCheck(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_EnableControlFrameLenCheck	xxgbeth0/xxgethernet.c	/^void XXgEthernet_EnableControlFrameLenCheck(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_EnableControlFrameLenCheck	xxgbeth1/xxgethernet.c	/^void XXgEthernet_EnableControlFrameLenCheck(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_GetMacAddress	xxgbeth0/xxgethernet.c	/^void XXgEthernet_GetMacAddress(XXgEthernet *InstancePtr, void *AddressPtr)$/;"	f
XXgEthernet_GetMacAddress	xxgbeth1/xxgethernet.c	/^void XXgEthernet_GetMacAddress(XXgEthernet *InstancePtr, void *AddressPtr)$/;"	f
XXgEthernet_GetMacPauseAddress	xxgbeth0/xxgethernet_control.c	/^void XXgEthernet_GetMacPauseAddress(XXgEthernet *InstancePtr,$/;"	f
XXgEthernet_GetMacPauseAddress	xxgbeth1/xxgethernet_control.c	/^void XXgEthernet_GetMacPauseAddress(XXgEthernet *InstancePtr,$/;"	f
XXgEthernet_GetOptions	xxgbeth0/xxgethernet.c	/^u32 XXgEthernet_GetOptions(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_GetOptions	xxgbeth1/xxgethernet.c	/^u32 XXgEthernet_GetOptions(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_IsStarted	xxgbeth0/xxgethernet.h	575;"	d
XXgEthernet_IsStarted	xxgbeth1/xxgethernet.h	575;"	d
XXgEthernet_IsStatsConfigured	xxgbeth0/xxgethernet.h	598;"	d
XXgEthernet_IsStatsConfigured	xxgbeth1/xxgethernet.h	598;"	d
XXgEthernet_PhyRead	xxgbeth0/xxgethernet.c	/^void XXgEthernet_PhyRead(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f
XXgEthernet_PhyRead	xxgbeth1/xxgethernet.c	/^void XXgEthernet_PhyRead(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f
XXgEthernet_PhySetMdioDivisor	xxgbeth0/xxgethernet.c	/^void XXgEthernet_PhySetMdioDivisor(XXgEthernet *InstancePtr, u8 Divisor)		\/* !!sunitaj *\/$/;"	f
XXgEthernet_PhySetMdioDivisor	xxgbeth1/xxgethernet.c	/^void XXgEthernet_PhySetMdioDivisor(XXgEthernet *InstancePtr, u8 Divisor)		\/* !!sunitaj *\/$/;"	f
XXgEthernet_PhyWrite	xxgbeth0/xxgethernet.c	/^void XXgEthernet_PhyWrite(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f
XXgEthernet_PhyWrite	xxgbeth1/xxgethernet.c	/^void XXgEthernet_PhyWrite(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f
XXgEthernet_ReadReg	xxgbeth0/xxgethernet_hw.h	658;"	d
XXgEthernet_ReadReg	xxgbeth0/xxgethernet_hw.h	666;"	d
XXgEthernet_ReadReg	xxgbeth0/xxgethernet_hw.h	669;"	d
XXgEthernet_ReadReg	xxgbeth1/xxgethernet_hw.h	658;"	d
XXgEthernet_ReadReg	xxgbeth1/xxgethernet_hw.h	666;"	d
XXgEthernet_ReadReg	xxgbeth1/xxgethernet_hw.h	669;"	d
XXgEthernet_Reset	xxgbeth0/xxgethernet.c	/^void XXgEthernet_Reset(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_Reset	xxgbeth1/xxgethernet.c	/^void XXgEthernet_Reset(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_SetMacAddress	xxgbeth0/xxgethernet.c	/^int XXgEthernet_SetMacAddress(XXgEthernet *InstancePtr, void *AddressPtr)$/;"	f
XXgEthernet_SetMacAddress	xxgbeth1/xxgethernet.c	/^int XXgEthernet_SetMacAddress(XXgEthernet *InstancePtr, void *AddressPtr)$/;"	f
XXgEthernet_SetMacPauseAddress	xxgbeth0/xxgethernet_control.c	/^int XXgEthernet_SetMacPauseAddress(XXgEthernet *InstancePtr,$/;"	f
XXgEthernet_SetMacPauseAddress	xxgbeth1/xxgethernet_control.c	/^int XXgEthernet_SetMacPauseAddress(XXgEthernet *InstancePtr,$/;"	f
XXgEthernet_SetOptions	xxgbeth0/xxgethernet.c	/^int XXgEthernet_SetOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f
XXgEthernet_SetOptions	xxgbeth1/xxgethernet.c	/^int XXgEthernet_SetOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f
XXgEthernet_Start	xxgbeth0/xxgethernet.c	/^void XXgEthernet_Start(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_Start	xxgbeth1/xxgethernet.c	/^void XXgEthernet_Start(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_Stop	xxgbeth0/xxgethernet.c	/^void XXgEthernet_Stop(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_Stop	xxgbeth1/xxgethernet.c	/^void XXgEthernet_Stop(XXgEthernet *InstancePtr)$/;"	f
XXgEthernet_UpdateDepOptions	xxgbeth0/xxgethernet.c	/^static u32 XXgEthernet_UpdateDepOptions(XXgEthernet *InstancePtr)$/;"	f	file:
XXgEthernet_UpdateDepOptions	xxgbeth1/xxgethernet.c	/^static u32 XXgEthernet_UpdateDepOptions(XXgEthernet *InstancePtr)$/;"	f	file:
XXgEthernet_WriteReg	xxgbeth0/xxgethernet_hw.h	692;"	d
XXgEthernet_WriteReg	xxgbeth0/xxgethernet_hw.h	699;"	d
XXgEthernet_WriteReg	xxgbeth0/xxgethernet_hw.h	702;"	d
XXgEthernet_WriteReg	xxgbeth1/xxgethernet_hw.h	692;"	d
XXgEthernet_WriteReg	xxgbeth1/xxgethernet_hw.h	699;"	d
XXgEthernet_WriteReg	xxgbeth1/xxgethernet_hw.h	702;"	d
XXgEthernet_indent	xxgbeth0/xxgethernet_hw.h	536;"	d
XXgEthernet_indent	xxgbeth1/xxgethernet_hw.h	536;"	d
XXgEthernet_print_reg_i	xxgbeth0/xxgethernet_hw.h	637;"	d
XXgEthernet_print_reg_i	xxgbeth1/xxgethernet_hw.h	637;"	d
XXgEthernet_print_reg_o	xxgbeth0/xxgethernet_hw.h	632;"	d
XXgEthernet_print_reg_o	xxgbeth1/xxgethernet_hw.h	632;"	d
XXgEthernet_reg_name	xxgbeth0/xxgethernet_hw.h	541;"	d
XXgEthernet_reg_name	xxgbeth1/xxgethernet_hw.h	541;"	d
Xboolean	include/xbasic_types.h	/^typedef unsigned long Xboolean; \/**< boolean (XTRUE or XFALSE) *\/$/;"	t
Xfloat32	include/xbasic_types.h	/^typedef float       Xfloat32; \/**< 32-bit floating point *\/$/;"	t
Xfloat64	include/xbasic_types.h	/^typedef double        Xfloat64; \/**< 64-bit double precision FP *\/$/;"	t
Xil_AssertNonVoidAlways	include/xbasic_types.h	303;"	d
Xil_AssertNonvoid	include/xbasic_types.h	301;"	d
Xil_AssertVoid	include/xbasic_types.h	300;"	d
Xil_AssertVoidAlways	include/xbasic_types.h	302;"	d
Xil_In32	include/xio.h	235;"	d
Xil_Out32	include/xio.h	236;"	d
Xint16	include/xbasic_types.h	/^typedef short       Xint16;   \/**< signed 16-bit *\/$/;"	t
Xint32	include/xbasic_types.h	/^typedef long        Xint32;   \/**< signed 32-bit *\/$/;"	t
Xint8	include/xbasic_types.h	/^typedef char        Xint8;    \/**< signed 8-bit *\/$/;"	t
Xuint16	include/xbasic_types.h	/^typedef unsigned short  Xuint16;  \/**< unsigned 16-bit *\/$/;"	t
Xuint32	include/xbasic_types.h	/^typedef unsigned long Xuint32;  \/**< unsigned 32-bit *\/$/;"	t
Xuint64	include/xbasic_types.h	/^} Xuint64;$/;"	t	typeref:struct:__anon5
Xuint8	include/xbasic_types.h	/^typedef unsigned char Xuint8;   \/**< unsigned 8-bit *\/$/;"	t
YES	xrawdata0/sguser.c	142;"	d	file:
YES	xrawdata1/sguser.c	142;"	d	file:
YES_BP	xrawdata0/sguser.c	230;"	d	file:
YES_BP	xrawdata1/sguser.c	230;"	d	file:
_XXgEthernet_ClearOptions	xxgbeth0/xgadapter.c	/^static inline int _XXgEthernet_ClearOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f	file:
_XXgEthernet_ClearOptions	xxgbeth1/xgadapter.c	/^static inline int _XXgEthernet_ClearOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f	file:
_XXgEthernet_GetMacAddress	xxgbeth0/xgadapter.c	/^static inline void _XXgEthernet_GetMacAddress(XXgEthernet *InstancePtr,$/;"	f	file:
_XXgEthernet_GetMacAddress	xxgbeth1/xgadapter.c	/^static inline void _XXgEthernet_GetMacAddress(XXgEthernet *InstancePtr,$/;"	f	file:
_XXgEthernet_PhyRead	xxgbeth0/xgadapter.c	/^static inline void _XXgEthernet_PhyRead(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f	file:
_XXgEthernet_PhyRead	xxgbeth1/xgadapter.c	/^static inline void _XXgEthernet_PhyRead(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f	file:
_XXgEthernet_PhyWrite	xxgbeth0/xgadapter.c	/^static inline void _XXgEthernet_PhyWrite(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f	file:
_XXgEthernet_PhyWrite	xxgbeth1/xgadapter.c	/^static inline void _XXgEthernet_PhyWrite(XXgEthernet *InstancePtr, u32 PhyAddress,$/;"	f	file:
_XXgEthernet_Reset	xxgbeth0/xgadapter.c	/^static inline void _XXgEthernet_Reset(XXgEthernet *InstancePtr)$/;"	f	file:
_XXgEthernet_Reset	xxgbeth1/xgadapter.c	/^static inline void _XXgEthernet_Reset(XXgEthernet *InstancePtr)$/;"	f	file:
_XXgEthernet_SetMacAddress	xxgbeth0/xgadapter.c	/^static inline int _XXgEthernet_SetMacAddress(XXgEthernet *InstancePtr,$/;"	f	file:
_XXgEthernet_SetMacAddress	xxgbeth1/xgadapter.c	/^static inline int _XXgEthernet_SetMacAddress(XXgEthernet *InstancePtr,$/;"	f	file:
_XXgEthernet_SetOptions	xxgbeth0/xgadapter.c	/^static inline int _XXgEthernet_SetOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f	file:
_XXgEthernet_SetOptions	xxgbeth1/xgadapter.c	/^static inline int _XXgEthernet_SetOptions(XXgEthernet *InstancePtr, u32 Options)$/;"	f	file:
_XXgEthernet_Start	xxgbeth0/xgadapter.c	/^static inline void _XXgEthernet_Start(XXgEthernet *InstancePtr)$/;"	f	file:
_XXgEthernet_Start	xxgbeth1/xgadapter.c	/^static inline void _XXgEthernet_Start(XXgEthernet *InstancePtr)$/;"	f	file:
_XXgEthernet_Stop	xxgbeth0/xgadapter.c	/^static inline void _XXgEthernet_Stop(XXgEthernet *InstancePtr)$/;"	f	file:
_XXgEthernet_Stop	xxgbeth1/xgadapter.c	/^static inline void _XXgEthernet_Stop(XXgEthernet *InstancePtr)$/;"	f	file:
__this_module	xdma/xdma_k7.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	xrawdata0/xrawdata0.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	xrawdata1/xrawdata1.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	xdma/xdma_k7.mod.c	/^__used$/;"	v	file:
__used	xrawdata0/xrawdata0.mod.c	/^__used$/;"	v	file:
__used	xrawdata1/xrawdata1.mod.c	/^__used$/;"	v	file:
barInfo	xdma/xdma.h	/^    } barInfo[MAX_BARS];$/;"	m	struct:privData	typeref:struct:privData::__anon26
barMask	xdma/xdma.h	/^    u32 barMask;                    \/**< Bitmask for BAR information *\/$/;"	m	struct:privData
baseLen	xdma/xdma.h	/^        unsigned long baseLen;      \/**< Length of device memory *\/$/;"	m	struct:privData::__anon26
basePAddr	xdma/xdma.h	/^        unsigned long basePAddr;    \/**< Base address of device memory *\/$/;"	m	struct:privData::__anon26
baseVAddr	xdma/xdma.h	/^        void __iomem * baseVAddr;   \/**< VA - mapped address *\/$/;"	m	struct:privData::__anon26
bufInfo	include/xdma_user.h	/^    unsigned char * bufInfo;    \/**< Per-packet identifier *\/$/;"	m	struct:__anon1
buffList	include/xpmon_be.h	/^	BufferInfo buffList[MAX_LIST];  \/**< Array of buffers Transmitted\/received *\/$/;"	m	struct:__anon19
buffSize	include/xpmon_be.h	/^	unsigned int buffSize;      \/**< Size of the buffer received\/transmitted *\/$/;"	m	struct:__anon18
bufferAddress	include/xpmon_be.h	/^	char *bufferAddress;		\/**< Buffer Address received\/transmitted *\/$/;"	m	struct:__anon18
clean_ethernet_driver	include.mk	/^define clean_ethernet_driver$/;"	m
clean_performance_driver	include.mk	/^define clean_performance_driver$/;"	m
compile_ethernet_driver	include.mk	/^define compile_ethernet_driver$/;"	m
compile_performance_driver	include.mk	/^define compile_performance_driver$/;"	m
deferred_skb	xxgbeth0/xgadapter.c	/^	struct sk_buff *deferred_skb;$/;"	m	struct:net_local	typeref:struct:net_local::sk_buff	file:
deferred_skb	xxgbeth1/xgadapter.c	/^	struct sk_buff *deferred_skb;$/;"	m	struct:net_local	typeref:struct:net_local::sk_buff	file:
delta	xdma/xdma.h	/^			u32 delta;              \/**< Shift from original start for alignment *\/$/;"	m	struct:__anon24
delta	xdma/xdma.h	/^    u32 delta;              \/**< Shift from original start for alignment *\/$/;"	m	struct:__anon25
descSpacePA	xdma/xdma.h	/^			dma_addr_t descSpacePA; \/**< Physical address of BD space *\/$/;"	m	struct:__anon24
descSpacePA	xdma/xdma.h	/^    dma_addr_t descSpacePA; \/**< Physical address of BD space *\/$/;"	m	struct:__anon25
descSpaceSize	xdma/xdma.h	/^			u32 descSpaceSize;      \/**< Size of BD space in bytes *\/$/;"	m	struct:__anon24
descSpaceSize	xdma/xdma.h	/^    u32 descSpaceSize;      \/**< Size of BD space in bytes *\/$/;"	m	struct:__anon25
descSpaceVA	xdma/xdma.h	/^			u64 * descSpaceVA;      \/**< Virtual address of BD space *\/$/;"	m	struct:__anon24
descSpaceVA	xdma/xdma.h	/^    u32 * descSpaceVA;      \/**< Virtual address of BD space *\/$/;"	m	struct:__anon25
descriptor_free	xdma/xdma_base.c	/^void descriptor_free(struct pci_dev *pdev, Dma_Engine * eptr)$/;"	f
descriptor_init	xdma/xdma_base.c	/^int descriptor_init(struct pci_dev *pdev, Dma_Engine * eptr)$/;"	f
die_temp	include/xpmon_be.h	/^    int die_temp;     \/*DIE TEMPERATURE              0x9070 *\/$/;"	m	struct:__anon15
disp_bd_ring	xdma/xdma_base.c	/^void disp_bd_ring(Dma_BdRing *bd_ring)$/;"	f
disp_frag	xdma/xdma_base.c	/^void disp_frag(unsigned char * addr, u32 len)$/;"	f
disp_frag	xxgbeth0/xgadapter.c	/^void disp_frag(unsigned char * addr, u32 len)$/;"	f
disp_frag	xxgbeth1/xgadapter.c	/^void disp_frag(unsigned char * addr, u32 len)$/;"	f
dmaData	xdma/xdma_base.c	/^struct privData * dmaData = NULL;$/;"	v	typeref:struct:privData
dstatsNum	xdma/xdma_base.c	/^int dstatsNum[MAX_DMA_ENGINES], sstatsRead[MAX_DMA_ENGINES];$/;"	v
dstatsRead	xdma/xdma_base.c	/^int dstatsRead[MAX_DMA_ENGINES], dstatsWrite[MAX_DMA_ENGINES];$/;"	v
dstatsWrite	xdma/xdma_base.c	/^int dstatsRead[MAX_DMA_ENGINES], dstatsWrite[MAX_DMA_ENGINES];$/;"	v
endAddress	include/xpmon_be.h	/^        char *endAddress;$/;"	m	struct:__anon18
endSize	include/xpmon_be.h	/^        unsigned int endSize;$/;"	m	struct:__anon18
engineMask	xdma/xdma.h	/^    long long engineMask;           \/**< For storing a 64-bit mask *\/$/;"	m	struct:privData
engptr	include/xpmon_be.h	/^    DMAStatistics * engptr;     \/**< Pointer to array to store statistics *\/$/;"	m	struct:__anon9
expected	include/xpmon_be.h	/^	unsigned int expected;			\/**< Expected  number of buffers from driver *\/$/;"	m	struct:__anon19
flags	include/xdma_user.h	/^    unsigned int flags;         \/**< Flags associated with packet *\/$/;"	m	struct:__anon1
getBuffInfo	xrawdata0/sguser.c	/^getBuffInfo (BufferInfoQue * bQue, BufferInfo * buff)$/;"	f
getBuffInfo	xrawdata1/sguser.c	/^getBuffInfo (BufferInfoQue * bQue, BufferInfo * buff)$/;"	f
get_phy_status	xxgbeth0/xgadapter.c	/^static int get_phy_status(struct net_device *dev, DUPLEX * duplex, int *linkup)$/;"	f	file:
get_phy_status	xxgbeth1/xgadapter.c	/^static int get_phy_status(struct net_device *dev, DUPLEX * duplex, int *linkup)$/;"	f	file:
handle	xrawdata0/sguser.c	/^void *handle[4] = { NULL, NULL, NULL, NULL };$/;"	v
handle	xrawdata1/sguser.c	/^void *handle[4] = { NULL, NULL, NULL, NULL };$/;"	v
iGetIndex	xrawdata0/sguser.c	/^  unsigned int iGetIndex;          \/** < Index to get the packets in Queue *\/ $/;"	m	struct:BufferInfoQ	file:
iGetIndex	xrawdata1/sguser.c	/^  unsigned int iGetIndex;          \/** < Index to get the packets in Queue *\/ $/;"	m	struct:BufferInfoQ	file:
iList	xrawdata0/sguser.c	/^  BufferInfo iList[MAX_BUFF_INFO]; \/** < Buffer Queue implimented in driver for storing incoming Pkts *\/$/;"	m	struct:BufferInfoQ	file:
iList	xrawdata1/sguser.c	/^  BufferInfo iList[MAX_BUFF_INFO]; \/** < Buffer Queue implimented in driver for storing incoming Pkts *\/$/;"	m	struct:BufferInfoQ	file:
iLock	xrawdata0/sguser.c	/^  spinlock_t iLock;		           \/** < will be init to unlock by default  *\/$/;"	m	struct:BufferInfoQ	file:
iLock	xrawdata1/sguser.c	/^  spinlock_t iLock;		           \/** < will be init to unlock by default  *\/$/;"	m	struct:BufferInfoQ	file:
iPendingDone	xrawdata0/sguser.c	/^  unsigned int iPendingDone;       \/** < Indicates number of packets to read *\/  $/;"	m	struct:BufferInfoQ	file:
iPendingDone	xrawdata1/sguser.c	/^  unsigned int iPendingDone;       \/** < Indicates number of packets to read *\/  $/;"	m	struct:BufferInfoQ	file:
iPutIndex	xrawdata0/sguser.c	/^  unsigned int iPutIndex;          \/** < Index to put the packets in Queue *\/$/;"	m	struct:BufferInfoQ	file:
iPutIndex	xrawdata1/sguser.c	/^  unsigned int iPutIndex;          \/** < Index to put the packets in Queue *\/$/;"	m	struct:BufferInfoQ	file:
ids	xdma/xdma_base.c	/^static struct pci_device_id ids[] = {$/;"	v	typeref:struct:pci_device_id	file:
impl_bp	xrawdata0/sguser.c	/^u8 impl_bp = NO_BP;\/*back pressure implementation flag *\/$/;"	v
impl_bp	xrawdata1/sguser.c	/^u8 impl_bp = NO_BP;\/*back pressure implementation flag *\/$/;"	v
index	xdma/xdma.h	/^  u32 index;                    \/**< Which interface is this *\/$/;"	m	struct:privData
index	xxgbeth0/xgadapter.c	/^	u32 index;		                \/* Which interface is this *\/$/;"	m	struct:net_local	file:
index	xxgbeth1/xgadapter.c	/^	u32 index;		                \/* Which interface is this *\/$/;"	m	struct:net_local	file:
insert_ethernet_driver	include.mk	/^define insert_ethernet_driver$/;"	m
insert_performance_driver	include.mk	/^define insert_performance_driver$/;"	m
intrCount	xdma/xdma.h	/^			int intrCount;          \/**< Counter to control interrupt coalescing *\/$/;"	m	struct:__anon24
intrCount	xdma/xdma.h	/^    int intrCount;          \/**< Counter to control interrupt coalescing *\/$/;"	m	struct:__anon25
local_features	xxgbeth0/xgadapter.c	/^	unsigned long local_features;$/;"	m	struct:net_local	file:
local_features	xxgbeth1/xgadapter.c	/^	unsigned long local_features;$/;"	m	struct:net_local	file:
log_normal	include/xdebug.h	132;"	d
log_normal	include/xdebug.h	137;"	d
log_normal	include/xdebug.h	141;"	d
log_verbose	include/xdebug.h	131;"	d
log_verbose	include/xdebug.h	136;"	d
log_verbose	include/xdebug.h	142;"	d
max_frags_in_a_packet	xxgbeth0/xgadapter.c	/^    	int max_frags_in_a_packet;$/;"	m	struct:net_local	file:
max_frags_in_a_packet	xxgbeth1/xgadapter.c	/^    	int max_frags_in_a_packet;$/;"	m	struct:net_local	file:
max_frame_size	xxgbeth0/xgadapter.c	/^	unsigned int max_frame_size;$/;"	m	struct:net_local	file:
max_frame_size	xxgbeth1/xgadapter.c	/^	unsigned int max_frame_size;$/;"	m	struct:net_local	file:
mgt_avcc	include/xpmon_be.h	/^    int mgt_avcc;     \/*MGT_AVCC Power   Consumption 0x9058 *\/$/;"	m	struct:__anon15
mgt_avtt	include/xpmon_be.h	/^    int mgt_avtt;     \/*MGT_AVTT Power   Consumption 0x905C *\/$/;"	m	struct:__anon15
mgt_vccaux	include/xpmon_be.h	/^    int mgt_vccaux;   \/*MGT_VCCAUX Power Consumption 0x9068 *\/$/;"	m	struct:__anon15
mode	include/xdma_user.h	/^		unsigned int mode;          \/* Performance mode or Ethernet App mode *\/$/;"	m	struct:__anon3
mode	include/xdma_user.h	/^		unsigned int mode;          \/* Performance mode or Ethernet App mode *\/$/;"	m	struct:__anon4
myGetRxPkt	xrawdata0/sguser.c	/^myGetRxPkt (void *hndl, PktBuf * vaddr, unsigned int size, int numpkts,$/;"	f
myGetRxPkt	xrawdata1/sguser.c	/^myGetRxPkt (void *hndl, PktBuf * vaddr, unsigned int size, int numpkts,$/;"	f
myGetState	xrawdata0/sguser.c	/^myGetState (void *hndl, UserState * ustate, unsigned int privdata)$/;"	f
myGetState	xrawdata1/sguser.c	/^myGetState (void *hndl, UserState * ustate, unsigned int privdata)$/;"	f
myGetState	xxgbeth0/xgadapter.c	/^int myGetState(void * handle, UserState * ustate, u64 privdata)$/;"	f
myGetState	xxgbeth1/xgadapter.c	/^int myGetState(void * handle, UserState * ustate, u64 privdata)$/;"	f
myInit	xrawdata0/sguser.c	/^myInit (u64 barbase, unsigned int privdata)$/;"	f
myInit	xrawdata1/sguser.c	/^myInit (u64 barbase, unsigned int privdata)$/;"	f
myPutRxPkt	xrawdata0/sguser.c	/^myPutRxPkt (void *hndl, PktBuf * vaddr, int numpkts, unsigned int privdata)$/;"	f
myPutRxPkt	xrawdata1/sguser.c	/^myPutRxPkt (void *hndl, PktBuf * vaddr, int numpkts, unsigned int privdata)$/;"	f
myPutTxPkt	xrawdata0/sguser.c	/^myPutTxPkt (void *hndl, PktBuf * vaddr, int numpkts, unsigned int privdata)$/;"	f
myPutTxPkt	xrawdata1/sguser.c	/^myPutTxPkt (void *hndl, PktBuf * vaddr, int numpkts, unsigned int privdata)$/;"	f
myRxGetPkt	xxgbeth0/xgadapter.c	/^int myRxGetPkt(void * handle, PktBuf * vaddr, unsigned int size, int numpkts, u64 privdata)$/;"	f
myRxGetPkt	xxgbeth1/xgadapter.c	/^int myRxGetPkt(void * handle, PktBuf * vaddr, unsigned int size, int numpkts, u64 privdata)$/;"	f
myRxPutPkt	xxgbeth0/xgadapter.c	/^int myRxPutPkt(void * handle, PktBuf * vaddr, int numpkts, u64  privdata)$/;"	f
myRxPutPkt	xxgbeth1/xgadapter.c	/^int myRxPutPkt(void * handle, PktBuf * vaddr, int numpkts, u64  privdata)$/;"	f
mySetResume	xxgbeth0/xgadapter.c	/^int mySetResume(void * handle, UserState * ustate, u64 privdata)$/;"	f
mySetResume	xxgbeth1/xgadapter.c	/^int mySetResume(void * handle, UserState * ustate, u64 privdata)$/;"	f
mySetState	xrawdata0/sguser.c	/^mySetState (void *hndl, UserState * ustate, unsigned int privdata)$/;"	f
mySetState	xrawdata1/sguser.c	/^mySetState (void *hndl, UserState * ustate, unsigned int privdata)$/;"	f
mySetState	xxgbeth0/xgadapter.c	/^int mySetState(void * handle, UserState * ustate, u64 privdata)$/;"	f
mySetState	xxgbeth1/xgadapter.c	/^int mySetState(void * handle, UserState * ustate, u64 privdata)$/;"	f
mySetSuspend_Early	xxgbeth0/xgadapter.c	/^int mySetSuspend_Early(void * handle, UserState * ustate, u64 privdata)$/;"	f
mySetSuspend_Early	xxgbeth1/xgadapter.c	/^int mySetSuspend_Early(void * handle, UserState * ustate, u64 privdata)$/;"	f
mySetSuspend_Late	xxgbeth0/xgadapter.c	/^int mySetSuspend_Late(void * handle, UserState * ustate, u64 privdata)$/;"	f
mySetSuspend_Late	xxgbeth1/xgadapter.c	/^int mySetSuspend_Late(void * handle, UserState * ustate, u64 privdata)$/;"	f
myTxPutPkt	xxgbeth0/xgadapter.c	/^int myTxPutPkt(void * handle, PktBuf * vaddr, int numpkts, u64 privdata)$/;"	f
myTxPutPkt	xxgbeth1/xgadapter.c	/^int myTxPutPkt(void * handle, PktBuf * vaddr, int numpkts, u64 privdata)$/;"	f
ndev	xxgbeth0/xgadapter.c	/^	struct net_device *ndev;	    \/* This device instance *\/$/;"	m	struct:net_local	typeref:struct:net_local::net_device	file:
ndev	xxgbeth0/xgadapter.c	/^struct net_device *ndev = NULL;	    \/* This networking device *\/$/;"	v	typeref:struct:net_device
ndev	xxgbeth1/xgadapter.c	/^	struct net_device *ndev;	    \/* This device instance *\/$/;"	m	struct:net_local	typeref:struct:net_local::net_device	file:
ndev	xxgbeth1/xgadapter.c	/^struct net_device *ndev = NULL;	    \/* This networking device *\/$/;"	v	typeref:struct:net_device
net_local	xxgbeth0/xgadapter.c	/^ struct net_local {$/;"	s	file:
net_local	xxgbeth0/xgadapter.c	/^struct net_local {$/;"	s	file:
net_local	xxgbeth1/xgadapter.c	/^ struct net_local {$/;"	s	file:
net_local	xxgbeth1/xgadapter.c	/^struct net_local {$/;"	s	file:
next	xdma/xdma_base.c	/^    struct PktPool * next;$/;"	m	struct:PktPool	typeref:struct:PktPool::PktPool	file:
noPages	include/xpmon_be.h	/^        int noPages;$/;"	m	struct:__anon18
obj-m	xdma/Makefile	/^obj-m := xdma_base.c$/;"	m
obj-m	xdma/Makefile	/^obj-m := xdma_k7.o$/;"	m
obj-m	xrawdata0/Makefile	/^obj-m := sguser.c$/;"	m
obj-m	xrawdata0/Makefile	/^obj-m := xrawdata0.o$/;"	m
obj-m	xrawdata1/Makefile	/^obj-m := sguser.c$/;"	m
obj-m	xrawdata1/Makefile	/^obj-m := xrawdata1.o$/;"	m
obj-m	xxgbeth0/Makefile	/^obj-m := xbasic_types.o$/;"	m
obj-m	xxgbeth0/Makefile	/^obj-m := xxgbeth0.o$/;"	m
obj-m	xxgbeth1/Makefile	/^obj-m := xbasic_types.o$/;"	m
obj-m	xxgbeth1/Makefile	/^obj-m := xxgbeth1.o$/;"	m
origVA	xrawdata0/sguser.c	/^  unsigned char *origVA[NUM_BUFS];$/;"	m	struct:__anon22	file:
origVA	xrawdata1/sguser.c	/^  unsigned char *origVA[NUM_BUFS];$/;"	m	struct:__anon23	file:
pageAddr	include/xdma_user.h	/^    unsigned char * pageAddr;   \/**< User page address associated with buffer *\/$/;"	m	struct:__anon1
pageOffset	include/xdma_user.h	/^    unsigned int pageOffset;    \/**< User Page offset associated with page address *\/$/;"	m	struct:__anon1
pbuf	xdma/xdma_base.c	/^    PktBuf * pbuf;$/;"	m	struct:PktPool	file:
pdev	xdma/xdma.h	/^			struct pci_dev * pdev;  \/**< PCIe Device handle *\/$/;"	m	struct:__anon24	typeref:struct:__anon24::pci_dev
pdev	xdma/xdma.h	/^			struct pci_dev * pdev;  \/**< PCIe Device handle *\/$/;"	m	struct:__anon25	typeref:struct:__anon25::pci_dev
pdev	xdma/xdma.h	/^    struct pci_dev * pdev;          \/**< PCI device entry *\/$/;"	m	struct:privData	typeref:struct:privData::pci_dev
phy_timer	xxgbeth0/xgadapter.c	/^	struct timer_list phy_timer;	\/* PHY monitoring timer *\/$/;"	m	struct:net_local	typeref:struct:net_local::timer_list	file:
phy_timer	xxgbeth1/xgadapter.c	/^	struct timer_list phy_timer;	\/* PHY monitoring timer *\/$/;"	m	struct:net_local	typeref:struct:net_local::timer_list	file:
pktArray	xdma/xdma_base.c	/^PktBuf pktArray[MAX_POOL][DMA_BD_CNT]; \/\/ used for passing pkts between drivers.$/;"	v
pktBuf	include/xdma_user.h	/^    unsigned char * pktBuf;     \/**< Virtual Address of packet buffer *\/$/;"	m	struct:__anon1
pktPool	xdma/xdma_base.c	/^struct PktPool pktPool[MAX_POOL];$/;"	v	typeref:struct:PktPool
pktPoolHead	xdma/xdma_base.c	/^struct PktPool * pktPoolHead=NULL;$/;"	v	typeref:struct:PktPool
pktPoolTail	xdma/xdma_base.c	/^struct PktPool * pktPoolTail=NULL;$/;"	v	typeref:struct:PktPool
pktSize	include/xpmon_be.h	/^	int pktSize;				\/**< User Transmit packet Size *\/$/;"	m	struct:__anon20
pktSize	include/xpmon_be.h	/^    int pktSize;				\/**< User Receive packet Size *\/$/;"	m	struct:__anon21
pktSize	xdma/xdma.h	/^			int pktSize;            \/**< User-specified usual size of packets *\/$/;"	m	struct:__anon24
pktSize	xdma/xdma.h	/^    int pktSize;            \/**< User-specified usual size of packets *\/$/;"	m	struct:__anon25
pmval	xdma/xdma_base.c	/^PowerMonitorVal pmval;$/;"	v
poll_gmii	xxgbeth0/xgadapter.c	/^static void poll_gmii(unsigned long data)$/;"	f	file:
poll_gmii	xxgbeth1/xgadapter.c	/^static void poll_gmii(unsigned long data)$/;"	f	file:
poll_routine	xdma/xdma_base.c	/^static void poll_routine(unsigned long __opaque)$/;"	f	file:
poll_stats	xdma/xdma_base.c	/^static void poll_stats(unsigned long __opaque)$/;"	f	file:
poll_timer	xdma/xdma_base.c	/^struct timer_list poll_timer;$/;"	v	typeref:struct:timer_list
privData	include/xdma_user.h	/^		u64 privData;      \/**< User-specified private data *\/$/;"	m	struct:__anon3
privData	include/xdma_user.h	/^		unsigned int privData;      \/**< User-specified private data *\/$/;"	m	struct:__anon4
privData	xdma/xdma.h	/^struct privData {$/;"	s
putBuffInfo	xrawdata0/sguser.c	/^putBuffInfo (BufferInfoQue * bQue, BufferInfo buff)$/;"	f
putBuffInfo	xrawdata1/sguser.c	/^putBuffInfo (BufferInfoQue * bQue, BufferInfo buff)$/;"	f
pwr_rsvd	include/xpmon_be.h	/^    int pwr_rsvd;     \/*RESERVED                     0x906C *\/$/;"	m	struct:__anon15
rawdata_cleanup	xrawdata0/sguser.c	/^module_exit (rawdata_cleanup);$/;"	v
rawdata_cleanup	xrawdata0/sguser.c	/^rawdata_cleanup (void)$/;"	f	file:
rawdata_cleanup	xrawdata1/sguser.c	/^module_exit (rawdata_cleanup);$/;"	v
rawdata_cleanup	xrawdata1/sguser.c	/^rawdata_cleanup (void)$/;"	f	file:
rawdata_init	xrawdata0/sguser.c	/^module_init (rawdata_init);$/;"	v
rawdata_init	xrawdata0/sguser.c	/^rawdata_init (void)$/;"	f	file:
rawdata_init	xrawdata1/sguser.c	/^module_init (rawdata_init);$/;"	v
rawdata_init	xrawdata1/sguser.c	/^rawdata_init (void)$/;"	f	file:
rcv	xxgbeth0/xgadapter.c	/^	struct list_head rcv;$/;"	m	struct:net_local	typeref:struct:net_local::list_head	file:
rcv	xxgbeth1/xgadapter.c	/^	struct list_head rcv;$/;"	m	struct:net_local	typeref:struct:net_local::list_head	file:
read_allreg	xxgbeth0/xgadapter.c	/^static void read_allreg(u32 RegBase)$/;"	f	file:
read_allreg	xxgbeth1/xgadapter.c	/^static void read_allreg(u32 RegBase)$/;"	f	file:
read_skb_info	xxgbeth0/xgadapter.c	/^static void read_skb_info(struct sk_buff *skb)$/;"	f	file:
read_skb_info	xxgbeth1/xgadapter.c	/^static void read_skb_info(struct sk_buff *skb)$/;"	f	file:
read_xgemac	xxgbeth0/xgadapter.c	/^static void read_xgemac(unsigned int IoAddrTemac)$/;"	f	file:
read_xgemac	xxgbeth1/xgadapter.c	/^static void read_xgemac(unsigned int IoAddrTemac)$/;"	f	file:
readbe2le	include/xio.h	/^static inline unsigned int readbe2le(unsigned int * addr)$/;"	f
realignments	xxgbeth0/xgadapter.c	/^    	unsigned long realignments;$/;"	m	struct:net_local	file:
realignments	xxgbeth1/xgadapter.c	/^    	unsigned long realignments;$/;"	m	struct:net_local	file:
receivedQueue	xxgbeth0/xgadapter.c	/^LIST_HEAD(receivedQueue);$/;"	v
receivedQueue	xxgbeth1/xgadapter.c	/^LIST_HEAD(receivedQueue);$/;"	v
receivedQueueSpin	xxgbeth0/xgadapter.c	/^static spinlock_t receivedQueueSpin;$/;"	v	file:
receivedQueueSpin	xxgbeth1/xgadapter.c	/^static spinlock_t receivedQueueSpin;$/;"	v	file:
remove_ethernet_driver	include.mk	/^define remove_ethernet_driver$/;"	m
remove_performance_driver	include.mk	/^define remove_performance_driver$/;"	m
reset	xxgbeth0/xgadapter.c	/^static void reset(struct net_device *dev, u32 line_num)$/;"	f	file:
reset	xxgbeth1/xgadapter.c	/^static void reset(struct net_device *dev, u32 line_num)$/;"	f	file:
rx_pkts	xxgbeth0/xgadapter.c	/^    	int rx_pkts;$/;"	m	struct:net_local	file:
rx_pkts	xxgbeth1/xgadapter.c	/^    	int rx_pkts;$/;"	m	struct:net_local	file:
sentQueue	xxgbeth0/xgadapter.c	/^LIST_HEAD(sentQueue);$/;"	v
sentQueue	xxgbeth1/xgadapter.c	/^LIST_HEAD(sentQueue);$/;"	v
sentQueueSpin	xxgbeth0/xgadapter.c	/^static spinlock_t sentQueueSpin;$/;"	v	file:
sentQueueSpin	xxgbeth1/xgadapter.c	/^static spinlock_t sentQueueSpin;$/;"	v	file:
size	include/xdma_user.h	/^    unsigned int size;          \/**< Size of packet buffer *\/$/;"	m	struct:__anon1
sstatsNum	xdma/xdma_base.c	/^int sstatsWrite[MAX_DMA_ENGINES], sstatsNum[MAX_DMA_ENGINES];$/;"	v
sstatsRead	xdma/xdma_base.c	/^int dstatsNum[MAX_DMA_ENGINES], sstatsRead[MAX_DMA_ENGINES];$/;"	v
sstatsWrite	xdma/xdma_base.c	/^int sstatsWrite[MAX_DMA_ENGINES], sstatsNum[MAX_DMA_ENGINES];$/;"	v
stats	xxgbeth0/xgadapter.c	/^	struct net_device_stats stats;	\/* Statistics for this device *\/$/;"	m	struct:net_local	typeref:struct:net_local::net_device_stats	file:
stats	xxgbeth1/xgadapter.c	/^	struct net_device_stats stats;	\/* Statistics for this device *\/$/;"	m	struct:net_local	typeref:struct:net_local::net_device_stats	file:
stats_timer	xdma/xdma_base.c	/^struct timer_list stats_timer;$/;"	v	typeref:struct:timer_list
stripping	xxgbeth0/xgadapter.c	/^	unsigned long stripping;$/;"	m	struct:net_local	file:
stripping	xxgbeth1/xgadapter.c	/^	unsigned long stripping;$/;"	m	struct:net_local	file:
swptr	include/xpmon_be.h	/^    SWStatistics * swptr;       \/**< Pointer to array to store statistics *\/$/;"	m	struct:__anon13
trnptr	include/xpmon_be.h	/^    TRNStatistics * trnptr;     \/**< Pointer to array to store statistics *\/$/;"	m	struct:__anon11
tstatsNum	xdma/xdma_base.c	/^int tstatsRead, tstatsWrite, tstatsNum;$/;"	v
tstatsRead	xdma/xdma_base.c	/^int tstatsRead, tstatsWrite, tstatsNum;$/;"	v
tstatsWrite	xdma/xdma_base.c	/^int tstatsRead, tstatsWrite, tstatsNum;$/;"	v
tx_pkts	xxgbeth0/xgadapter.c	/^    	int tx_pkts;$/;"	m	struct:net_local	file:
tx_pkts	xxgbeth1/xgadapter.c	/^    	int tx_pkts;$/;"	m	struct:net_local	file:
u16	include/xbasic_types.h	/^typedef Xuint16         u16;$/;"	t
u32	include/xbasic_types.h	/^typedef Xuint32         u32;$/;"	t
u8	include/xbasic_types.h	/^typedef Xuint8          u8;$/;"	t
user	xdma/xdma.h	/^			UserPtrs user;          \/**< User callback functions *\/$/;"	m	struct:__anon24
user	xdma/xdma.h	/^    UserPtrs user;          \/**< User callback functions *\/$/;"	m	struct:__anon25
userCount	xdma/xdma.h	/^    int userCount;                  \/**< Number of registered users *\/$/;"	m	struct:privData
userInfo	include/xdma_user.h	/^    unsigned long long userInfo;\/**< User info associated with packet *\/ $/;"	m	struct:__anon1
usrBuf	include/xpmon_be.h	/^	char* usrBuf;				\/**< User buffer address *\/$/;"	m	struct:__anon20
usrBuf	include/xpmon_be.h	/^	char* usrBuf;				\/**< User buffer address *\/$/;"	m	struct:__anon21
vadj	include/xpmon_be.h	/^    int vadj;         \/*VADJ                         0x904C *\/$/;"	m	struct:__anon15
vcc	include/xpmon_be.h	/^    int vcc;          \/*VCCINT Power     Consumption 0x9040 *\/$/;"	m	struct:__anon15
vcc1v5	include/xpmon_be.h	/^    int vcc1v5;       \/*VCC1V5 Power     Consumption 0x9054 *\/ $/;"	m	struct:__anon15
vcc2v5	include/xpmon_be.h	/^    int vcc2v5;       \/*VCC2V5 Power     Consumption 0x9050 *\/$/;"	m	struct:__anon15
vcc3v3	include/xpmon_be.h	/^    int vcc3v3;       \/*VCC3V3 Power     Consumption 0x9048 *\/$/;"	m	struct:__anon15
vccaux	include/xpmon_be.h	/^    int vccaux;       \/*VCCAUX Power     Consumption 0x9044 *\/$/;"	m	struct:__anon15
vccaux_io	include/xpmon_be.h	/^    int vccaux_io;    \/*VCCAUX_IO Power  Consumption 0x9060 *\/$/;"	m	struct:__anon15
vccbram	include/xpmon_be.h	/^    int vccbram;      \/*VCCBRAM Power    Consumption 0x9064 *\/$/;"	m	struct:__anon15
versionReg	include/xdma_user.h	/^		u64 versionReg;    \/**< User-specific version info register *\/$/;"	m	struct:__anon3
versionReg	include/xdma_user.h	/^		unsigned int versionReg;    \/**< User-specific version info register *\/$/;"	m	struct:__anon4
versionReg	xxgbeth0/xgadapter.c	/^	u32 versionReg;                 \/* User-specific version info *\/$/;"	m	struct:net_local	file:
versionReg	xxgbeth0/xgadapter.c	/^	u64 versionReg;                 \/* User-specific version info *\/$/;"	m	struct:net_local	file:
versionReg	xxgbeth1/xgadapter.c	/^	u32 versionReg;                 \/* User-specific version info *\/$/;"	m	struct:net_local	file:
versionReg	xxgbeth1/xgadapter.c	/^	u64 versionReg;                 \/* User-specific version info *\/$/;"	m	struct:net_local	file:
writele2be	include/xio.h	/^static inline void writele2be(unsigned int data, unsigned int * addr)$/;"	f
xdbg_current_types	include/xdebug.h	111;"	d
xdbg_printf	include/xdebug.h	114;"	d
xdbg_printf	include/xdebug.h	118;"	d
xdbg_stmnt	include/xdebug.h	113;"	d
xdbg_stmnt	include/xdebug.h	117;"	d
xdmaCdev	xdma/xdma_base.c	/^struct cdev * xdmaCdev=NULL;$/;"	v	typeref:struct:cdev
xdma_cleanup	xdma/xdma_base.c	/^module_exit(xdma_cleanup);$/;"	v
xdma_cleanup	xdma/xdma_base.c	/^static void __exit xdma_cleanup(void)$/;"	f	file:
xdma_dev_ioctl	xdma/xdma_base.c	/^static int xdma_dev_ioctl(struct inode * in, struct file * filp,$/;"	f	file:
xdma_dev_open	xdma/xdma_base.c	/^static int xdma_dev_open(struct inode * in, struct file * filp)$/;"	f	file:
xdma_dev_release	xdma/xdma_base.c	/^static int xdma_dev_release(struct inode * in, struct file * filp)$/;"	f	file:
xdma_driver	xdma/xdma_base.c	/^static struct pci_driver xdma_driver = {$/;"	v	typeref:struct:pci_driver	file:
xdma_init	xdma/xdma_base.c	/^module_init(xdma_init);$/;"	v
xdma_init	xdma/xdma_base.c	/^static int __init xdma_init(void)$/;"	f	file:
xdma_k7-objs	xdma/Makefile	/^xdma_k7-objs :=  xdma_base.o xdma.o xdma_bdring.o xdma_user.o$/;"	m
xdma_pm_complete	xdma/xdma_base.c	/^static void xdma_pm_complete(struct device *dev)$/;"	f	file:
xdma_pm_freeze	xdma/xdma_base.c	/^static int xdma_pm_freeze(struct device *dev)$/;"	f	file:
xdma_pm_freeze_noirq	xdma/xdma_base.c	/^static int xdma_pm_freeze_noirq(struct device *dev)$/;"	f	file:
xdma_pm_ops	xdma/xdma_base.c	/^    struct dev_pm_ops xdma_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops
xdma_pm_ops	xdma/xdma_base.c	/^    struct pm_ext_ops xdma_pm_ops = {$/;"	v	typeref:struct:pm_ext_ops
xdma_pm_poweroff	xdma/xdma_base.c	/^static int xdma_pm_poweroff(struct device *dev)$/;"	f	file:
xdma_pm_poweroff_noirq	xdma/xdma_base.c	/^static int xdma_pm_poweroff_noirq(struct device *dev)$/;"	f	file:
xdma_pm_prepare	xdma/xdma_base.c	/^static int xdma_pm_prepare(struct device *dev)$/;"	f	file:
xdma_pm_restore	xdma/xdma_base.c	/^static int xdma_pm_restore(struct device *dev)$/;"	f	file:
xdma_pm_restore_noirq	xdma/xdma_base.c	/^static int xdma_pm_restore_noirq(struct device *dev)$/;"	f	file:
xdma_pm_resume	xdma/xdma_base.c	/^static int xdma_pm_resume(struct device *dev)$/;"	f	file:
xdma_pm_resume_noirq	xdma/xdma_base.c	/^static int xdma_pm_resume_noirq(struct device *dev)$/;"	f	file:
xdma_pm_suspend	xdma/xdma_base.c	/^static int xdma_pm_suspend(struct device *dev)$/;"	f	file:
xdma_pm_suspend_noirq	xdma/xdma_base.c	/^static int xdma_pm_suspend_noirq(struct device *dev)$/;"	f	file:
xdma_pm_thaw	xdma/xdma_base.c	/^static int xdma_pm_thaw(struct device *dev)$/;"	f	file:
xdma_pm_thaw_noirq	xdma/xdma_base.c	/^static int xdma_pm_thaw_noirq(struct device *dev)$/;"	f	file:
xdma_probe	xdma/xdma_base.c	/^static int __devinit xdma_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
xdma_remove	xdma/xdma_base.c	/^static void __devexit  xdma_remove(struct pci_dev *pdev)$/;"	f	file:
xenet_Send	xxgbeth0/xgadapter.c	/^static int xenet_Send(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
xenet_Send	xxgbeth1/xgadapter.c	/^static int xenet_Send(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
xenet_Send_internal	xxgbeth0/xgadapter.c	/^static int xenet_Send_internal(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
xenet_Send_internal	xxgbeth1/xgadapter.c	/^static int xenet_Send_internal(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
xenet_change_mtu	xxgbeth0/xgadapter.c	/^static int xenet_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
xenet_change_mtu	xxgbeth1/xgadapter.c	/^static int xenet_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
xenet_close	xxgbeth0/xgadapter.c	/^static int xenet_close(struct net_device *dev)$/;"	f	file:
xenet_close	xxgbeth1/xgadapter.c	/^static int xenet_close(struct net_device *dev)$/;"	f	file:
xenet_ethtool_get_drvinfo	xxgbeth0/xgadapter.c	/^xenet_ethtool_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *ed)$/;"	f	file:
xenet_ethtool_get_drvinfo	xxgbeth1/xgadapter.c	/^xenet_ethtool_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *ed)$/;"	f	file:
xenet_ethtool_get_pauseparam	xxgbeth0/xgadapter.c	/^xenet_ethtool_get_pauseparam(struct net_device *dev, $/;"	f	file:
xenet_ethtool_get_pauseparam	xxgbeth1/xgadapter.c	/^xenet_ethtool_get_pauseparam(struct net_device *dev, $/;"	f	file:
xenet_ethtool_get_regs	xxgbeth0/xgadapter.c	/^xenet_ethtool_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
xenet_ethtool_get_regs	xxgbeth1/xgadapter.c	/^xenet_ethtool_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
xenet_ethtool_get_regs_len	xxgbeth0/xgadapter.c	/^xenet_ethtool_get_regs_len(struct net_device *dev)$/;"	f	file:
xenet_ethtool_get_regs_len	xxgbeth1/xgadapter.c	/^xenet_ethtool_get_regs_len(struct net_device *dev)$/;"	f	file:
xenet_ethtool_get_ringparam	xxgbeth0/xgadapter.c	/^static void xenet_ethtool_get_ringparam(struct net_device *dev,$/;"	f	file:
xenet_ethtool_get_ringparam	xxgbeth1/xgadapter.c	/^static void xenet_ethtool_get_ringparam(struct net_device *dev,$/;"	f	file:
xenet_ethtool_get_settings	xxgbeth0/xgadapter.c	/^xenet_ethtool_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
xenet_ethtool_get_settings	xxgbeth1/xgadapter.c	/^xenet_ethtool_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
xenet_ethtool_get_sg	xxgbeth0/xgadapter.c	/^static u32 xenet_ethtool_get_sg(struct net_device *dev)$/;"	f	file:
xenet_ethtool_get_sg	xxgbeth1/xgadapter.c	/^static u32 xenet_ethtool_get_sg(struct net_device *dev)$/;"	f	file:
xenet_ethtool_get_sset_count	xxgbeth0/xgadapter.c	/^static int xenet_ethtool_get_sset_count(struct net_device *dev, int sset)$/;"	f	file:
xenet_ethtool_get_sset_count	xxgbeth1/xgadapter.c	/^static int xenet_ethtool_get_sset_count(struct net_device *dev, int sset)$/;"	f	file:
xenet_ethtool_get_stats	xxgbeth0/xgadapter.c	/^static void xenet_ethtool_get_stats(struct net_device *dev, struct ethtool_stats *est, u64 *data)$/;"	f	file:
xenet_ethtool_get_stats	xxgbeth1/xgadapter.c	/^static void xenet_ethtool_get_stats(struct net_device *dev, struct ethtool_stats *est, u64 *data)$/;"	f	file:
xenet_ethtool_get_stats_count	xxgbeth0/xgadapter.c	/^static int xenet_ethtool_get_stats_count(struct net_device *dev)$/;"	f	file:
xenet_ethtool_get_stats_count	xxgbeth1/xgadapter.c	/^static int xenet_ethtool_get_stats_count(struct net_device *dev)$/;"	f	file:
xenet_ethtool_get_strings	xxgbeth0/xgadapter.c	/^static void xenet_ethtool_get_strings(struct net_device *dev, u32 sset, u8 * data)$/;"	f	file:
xenet_ethtool_get_strings	xxgbeth1/xgadapter.c	/^static void xenet_ethtool_get_strings(struct net_device *dev, u32 sset, u8 * data)$/;"	f	file:
xenet_ethtool_gstrings_stats	xxgbeth0/xgadapter.c	/^static char xenet_ethtool_gstrings_stats[][ETH_GSTRING_LEN] = $/;"	v	file:
xenet_ethtool_gstrings_stats	xxgbeth1/xgadapter.c	/^static char xenet_ethtool_gstrings_stats[][ETH_GSTRING_LEN] = $/;"	v	file:
xenet_ethtool_ops	xxgbeth0/xgadapter.c	/^static struct ethtool_ops xenet_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
xenet_ethtool_ops	xxgbeth1/xgadapter.c	/^static struct ethtool_ops xenet_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
xenet_ethtool_set_settings	xxgbeth0/xgadapter.c	/^xenet_ethtool_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
xenet_ethtool_set_settings	xxgbeth1/xgadapter.c	/^xenet_ethtool_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
xenet_get_stats	xxgbeth0/xgadapter.c	/^static struct net_device_stats *xenet_get_stats(struct net_device *dev)$/;"	f	file:
xenet_get_stats	xxgbeth1/xgadapter.c	/^static struct net_device_stats *xenet_get_stats(struct net_device *dev)$/;"	f	file:
xenet_ioctl	xxgbeth0/xgadapter.c	/^static int xenet_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
xenet_ioctl	xxgbeth1/xgadapter.c	/^static int xenet_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
xenet_netdev_ops	xxgbeth0/xgadapter.c	/^static struct net_device_ops xenet_netdev_ops;$/;"	v	typeref:struct:net_device_ops	file:
xenet_netdev_ops	xxgbeth1/xgadapter.c	/^static struct net_device_ops xenet_netdev_ops;$/;"	v	typeref:struct:net_device_ops	file:
xenet_open	xxgbeth0/xgadapter.c	/^static int xenet_open(struct net_device *dev)$/;"	f	file:
xenet_open	xxgbeth1/xgadapter.c	/^static int xenet_open(struct net_device *dev)$/;"	f	file:
xenet_set_mac_address	xxgbeth0/xgadapter.c	/^static int xenet_set_mac_address(struct net_device *dev, void * ptr)$/;"	f	file:
xenet_set_mac_address	xxgbeth1/xgadapter.c	/^static int xenet_set_mac_address(struct net_device *dev, void * ptr)$/;"	f	file:
xenet_set_netdev_ops	xxgbeth0/xgadapter.c	/^static void xenet_set_netdev_ops(struct net_device *ndev, struct net_device_ops *ndops)$/;"	f	file:
xenet_set_netdev_ops	xxgbeth1/xgadapter.c	/^static void xenet_set_netdev_ops(struct net_device *ndev, struct net_device_ops *ndops)$/;"	f	file:
xenet_tx_timeout	xxgbeth0/xgadapter.c	/^static void xenet_tx_timeout(struct net_device *dev)$/;"	f	file:
xenet_tx_timeout	xxgbeth1/xgadapter.c	/^static void xenet_tx_timeout(struct net_device *dev)$/;"	f	file:
xgmii_addr	xxgbeth0/xgadapter.c	/^	u32 xgmii_addr;		            \/* The XGMII address of the PHY *\/	$/;"	m	struct:net_local	file:
xgmii_addr	xxgbeth1/xgadapter.c	/^	u32 xgmii_addr;		            \/* The XGMII address of the PHY *\/	$/;"	m	struct:net_local	file:
xmit	xxgbeth0/xgadapter.c	/^	struct list_head xmit;$/;"	m	struct:net_local	typeref:struct:net_local::list_head	file:
xmit	xxgbeth1/xgadapter.c	/^	struct list_head xmit;$/;"	m	struct:net_local	typeref:struct:net_local::list_head	file:
xrawCdev	xrawdata0/sguser.c	/^struct cdev *xrawCdev = NULL;$/;"	v	typeref:struct:cdev
xrawCdev	xrawdata1/sguser.c	/^struct cdev *xrawCdev = NULL;$/;"	v	typeref:struct:cdev
xrawTrans	xrawdata0/sguser.c	/^char xrawTrans[4096];$/;"	v
xrawTrans	xrawdata1/sguser.c	/^char xrawTrans[4096];$/;"	v
xraw_DriverState	xrawdata0/sguser.c	/^int xraw_DriverState = UNINITIALIZED;$/;"	v
xraw_DriverState	xrawdata1/sguser.c	/^int xraw_DriverState = UNINITIALIZED;$/;"	v
xraw_UserOpen	xrawdata0/sguser.c	/^int xraw_UserOpen = 0;$/;"	v
xraw_UserOpen	xrawdata1/sguser.c	/^int xraw_UserOpen = 0;$/;"	v
xraw_dev_ioctl	xrawdata0/sguser.c	/^xraw_dev_ioctl (struct file *filp,$/;"	f	file:
xraw_dev_ioctl	xrawdata1/sguser.c	/^xraw_dev_ioctl (struct file *filp,$/;"	f	file:
xraw_dev_open	xrawdata0/sguser.c	/^xraw_dev_open (struct inode *in, struct file *filp)$/;"	f	file:
xraw_dev_open	xrawdata1/sguser.c	/^xraw_dev_open (struct inode *in, struct file *filp)$/;"	f	file:
xraw_dev_read	xrawdata0/sguser.c	/^xraw_dev_read (struct file *file,$/;"	f	file:
xraw_dev_read	xrawdata1/sguser.c	/^xraw_dev_read (struct file *file,$/;"	f	file:
xraw_dev_release	xrawdata0/sguser.c	/^xraw_dev_release (struct inode *in, struct file *filp)$/;"	f	file:
xraw_dev_release	xrawdata1/sguser.c	/^xraw_dev_release (struct inode *in, struct file *filp)$/;"	f	file:
xraw_dev_write	xrawdata0/sguser.c	/^xraw_dev_write (struct file *file,$/;"	f	file:
xraw_dev_write	xrawdata1/sguser.c	/^xraw_dev_write (struct file *file,$/;"	f	file:
xrawdata0-objs	xrawdata0/Makefile	/^xrawdata0-objs :=  sguser.o $/;"	m
xrawdata1-objs	xrawdata1/Makefile	/^xrawdata1-objs :=  sguser.o $/;"	m
xtenet_cleanup	xxgbeth0/xgadapter.c	/^module_exit(xtenet_cleanup);$/;"	v
xtenet_cleanup	xxgbeth0/xgadapter.c	/^static void \/*__exit*\/ xtenet_cleanup(void)$/;"	f	file:
xtenet_cleanup	xxgbeth1/xgadapter.c	/^module_exit(xtenet_cleanup);$/;"	v
xtenet_cleanup	xxgbeth1/xgadapter.c	/^static void \/*__exit*\/ xtenet_cleanup(void)$/;"	f	file:
xtenet_init	xxgbeth0/xgadapter.c	/^module_init(xtenet_init);$/;"	v
xtenet_init	xxgbeth0/xgadapter.c	/^static int \/*__init*\/ xtenet_init(void)$/;"	f	file:
xtenet_init	xxgbeth1/xgadapter.c	/^module_init(xtenet_init);$/;"	v
xtenet_init	xxgbeth1/xgadapter.c	/^static int \/*__init*\/ xtenet_init(void)$/;"	f	file:
xtenet_init_bottom	xxgbeth0/xgadapter.c	/^static int xtenet_init_bottom(u64 BarBase, u64 privdata)$/;"	f	file:
xtenet_init_bottom	xxgbeth1/xgadapter.c	/^static int xtenet_init_bottom(u64 BarBase, u64 privdata)$/;"	f	file:
xtenet_init_top	xxgbeth0/xgadapter.c	/^static int xtenet_init_top(void)$/;"	f	file:
xtenet_init_top	xxgbeth1/xgadapter.c	/^static int xtenet_init_top(void)$/;"	f	file:
xxgbeth0-objs	xxgbeth0/Makefile	/^xxgbeth0-objs := xbasic_types.o xxgethernet.o xxgethernet_control.o xgadapter.o$/;"	m
xxgbeth1-objs	xxgbeth1/Makefile	/^xxgbeth1-objs := xbasic_types.o xxgethernet.o xxgethernet_control.o xgadapter.o$/;"	m
